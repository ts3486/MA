{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'; // import {fetchData} from \"./store/actions\";\n\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'; // import HomeComponent from \"./Components/HomeComponent\";\n\nimport LoginComponent from \"./Components/Login/LoginComponent\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes_home from \"./store/actions/home_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport PostComponent from \"./Components/Posts/PostComponent\";\nimport FormComponent from \"./Components/Forms/FormComponent\";\n\nclass App extends Component {\n  //constuructor is for creating a state at initialization.\n  //   constructor(props: any) {\n  //     super(props);\n  // }\n  //use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount() {\n    await this.props.onTryAutoSignup();\n    await this.props.fetchData();\n    await this.props.awaitData();\n  }\n\n  render() {\n    const home = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"header\",\n        children: \"Welcome to Music Accelerator!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The issue: 1. Changing just a part of the state one by one. 2. Post Method. Issue with data format imcompatibility with rest api?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), this.props.posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(PostComponent, {\n          id: post.id,\n          name: post.name,\n          image: post.image,\n          desc: post.desc,\n          likes: post.likes\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(FormComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this); //if (this.props.data === true){\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          id: \"nav\",\n          bg: \"light\",\n          expand: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"#home\",\n            children: \"React-Bootstrap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              className: \"mr-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"#home\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                href: \"#link\",\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n                title: \"Dropdown\",\n                id: \"basic-nav-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.1\",\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.2\",\n                  children: \"Another action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.3\",\n                  children: \"Something\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.4\",\n                  children: \"Separated link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              inline: true,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                placeholder: \"Search\",\n                className: \"mr-sm-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), this.props.isAutenticated ? /*#__PURE__*/_jsxDEV(Button, {\n                id: \"login\",\n                href: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                id: \"login\",\n                href: \"/login\",\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login2\",\n            component: LoginComponent2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this); //}  \n  }\n\n} //directs how the state managed by redux will be mapped to state here. Makes data from store available to component\n\n\nconst mapStateToProps = state => {\n  return {\n    text: state.home.text,\n    posts: state.home.posts,\n    data: state.home.data,\n    isAutenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => dispatch(actionTypes_home.fetchData()),\n    awaitData: () => dispatch(actionTypes_home.awaitData()),\n    onTryAutoSignup: () => dispatch(actionTypes_auth.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx"],"names":["React","Component","Navbar","Nav","NavDropdown","Form","FormControl","Button","BrowserRouter","Switch","Route","LoginComponent","connect","actionTypes_home","actionTypes_auth","PostComponent","FormComponent","App","componentDidMount","props","onTryAutoSignup","fetchData","awaitData","render","home","posts","map","post","index","id","name","image","desc","likes","isAutenticated","LoginComponent2","mapStateToProps","state","text","data","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\n// import {fetchData} from \"./store/actions\";\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n// import HomeComponent from \"./Components/HomeComponent\";\nimport LoginComponent from \"./Components/Login/LoginComponent\"\nimport {connect} from \"react-redux\";\nimport * as actionTypes_home from \"./store/actions/home_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport PostComponent from \"./Components/Posts/PostComponent\";\nimport FormComponent from \"./Components/Forms/FormComponent\";\n\nclass App extends Component<any> {\n\n//constuructor is for creating a state at initialization.\n//   constructor(props: any) {\n//     super(props);\n// }\n\n\n//use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount(){\n    await this.props.onTryAutoSignup();\n    await this.props.fetchData();\n    await this.props.awaitData();\n\n  };\n\n\n  render(){\n\n    const home = (\n \n      <div>\n        <h1 id=\"header\">Welcome to Music Accelerator!</h1>\n        <div>The issue: 1. Changing just a part of the state one by one. 2. Post Method. Issue with data format imcompatibility with rest api?</div> \n          {/* posts */}\n          {this.props.posts.map((post: any, index: number) => {\n            return <PostComponent id={post.id} name={post.name} image={post.image} desc={post.desc} likes={post.likes} key={index}/>    \n          })}      \n  \n        <FormComponent/>\n  \n        {/* end of jsx */}\n      </div>\n    );\n\n    //if (this.props.data === true){\n      return (\n\n        <div className=\"App\">\n          <BrowserRouter>\n\n          {/* NavBar */}\n          <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#link\">Link</Nav.Link>\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n              <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                {this.props.isAutenticated ?\n                <Button id=\"login\" href=\"/login\">Login</Button>\n                :\n                <Button id=\"login\" href=\"/login\">Logout</Button>\n                } \n              </Form>\n              \n            </Navbar.Collapse>\n          </Navbar>\n          \n          {/* Pages */}\n          \n            <Switch>\n              <Route exact={true} path=\"/\" render={()=> <div>{home}</div>}/>\n              <Route exact={true} path=\"/login\" component={LoginComponent}/>\n              <Route exact={true} path=\"/login2\" component={LoginComponent2}/>\n            </Switch>\n          </BrowserRouter>\n        </div> \n      );\n    //}  \n  }\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n  return {\n      text: state.home.text,\n      posts: state.home.posts,\n      data: state.home.data,\n      isAutenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return{\n      fetchData: () => dispatch(actionTypes_home.fetchData()),\n      awaitData: () => dispatch(actionTypes_home.awaitData()),\n      onTryAutoSignup: () => dispatch(actionTypes_auth.authCheckState()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}