{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/SignupComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Form, Input, Tooltip, Checkbox, Button } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\n\nconst RegistrationForm = props => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      initialValues: {\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86'\n      },\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"Password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"Confirm Password\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject('The two passwords that you entered do not match!');\n          }\n\n        })],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"Username\",\n        label: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Username\\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"What do you want others to call you?\",\n            children: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this),\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"phone\",\n        label: \"Phone Number\",\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"agreement\",\n        valuePropName: \"checked\",\n        rules: [{\n          validator: (_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"documents\",\n            children: \"agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actionTypes_auth.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/SignupComponent.tsx"],"names":["React","connect","Form","Input","Tooltip","Checkbox","Button","QuestionCircleOutlined","actionTypes_auth","RegistrationForm","props","form","useForm","onFinish","values","console","log","residence","prefix","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","whitespace","width","mapStateToProps","state","loading","auth","error","mapDispatchToProps","dispatch","onAuth","username","password","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Checkbox,\n  Button,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\n\n\n\nconst RegistrationForm = (props: any) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form: ', values);\n  };\n \n  return (\n    <div>\n    <Form\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86',\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"Username\"\n        label={\n          <span>\n            Username&nbsp;\n            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        }\n        rules={[\n          {\n            required: true,\n            message: 'Please input your nickname!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone Number\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number!',\n          },\n        ]}\n      >\n        <Input\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject('Should accept agreement'),\n          },\n        ]}\n\n      >\n        <Checkbox>\n          I have read the <a href=\"documents\">agreement</a>\n        </Checkbox>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n        loading: state.auth.loading,\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n        onAuth: (username: string, password: any) => dispatch(actionTypes_auth.authLogin(username, password)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\n"]},"metadata":{},"sourceType":"module"}