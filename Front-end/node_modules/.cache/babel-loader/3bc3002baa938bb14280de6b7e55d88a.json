{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './PostComponent_style.tsx';\nimport { PostWrapper } from \"./PostComponent_style\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { connect } from \"react-redux\";\nexport const PostComponent = Props => {\n  _s();\n\n  var _Props$filename, _Props$filename2, _Props$filename3, _Props$filename4;\n\n  //Get images\n  let content = null;\n\n  if ((_Props$filename = Props.filename) === null || _Props$filename === void 0 ? void 0 : _Props$filename.includes(\"jpg\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + Props.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this);\n  } else if ((_Props$filename2 = Props.filename) === null || _Props$filename2 === void 0 ? void 0 : _Props$filename2.includes(\"jpeg\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + Props.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);\n  } else if ((_Props$filename3 = Props.filename) === null || _Props$filename3 === void 0 ? void 0 : _Props$filename3.includes(\"png\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + Props.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }, this);\n  } else if ((_Props$filename4 = Props.filename) === null || _Props$filename4 === void 0 ? void 0 : _Props$filename4.includes(\"mov\")) {\n    content = /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + Props.filename,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this);\n  }\n\n  ; //Delete posts\n\n  const deleteHandler = () => {\n    axios.delete(\"http://localhost:5000/posts/delete/\" + Props.id).then(() => {\n      console.log(\"image \" + Props.id + \" deleted\");\n    });\n    axios.delete(\"http://localhost:5000/posts/image/delete/\" + Props.filename);\n    window.location.reload();\n  }; //Add Likes\n\n\n  const [likes, addLike] = useState(0);\n  const [postLiked, markPost] = useState(false);\n\n  const likeHandler = updatedLikes => {\n    const Likes = {\n      id: Props.id,\n      likes: updatedLikes\n    };\n    JSON.stringify(Likes);\n    axios.post(\"http://localhost:5000/posts/like\", Likes).then(() => {\n      console.log(\"like added\");\n    });\n    markPost(true);\n  };\n\n  const unlikeHandler = updatedLikes => {\n    const Likes = {\n      id: Props.id,\n      likes: updatedLikes\n    };\n    JSON.stringify(Likes);\n    axios.post(\"http://localhost:5000/posts/like\", Likes).then(() => {\n      console.log(\"like added\");\n    });\n    markPost(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_container\",\n      id: Props.id,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        children: Props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: Props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), postLiked ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes\",\n        onClick: () => {\n          addLike(likes - 1);\n          unlikeHandler(likes - 1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 107\n        }, this), \" : \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes\",\n        onClick: () => {\n          addLike(likes + 1);\n          likeHandler(likes + 1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: farHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 105\n        }, this), \" : \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: deleteHandler,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostComponent, \"rXTUQnYh3zdy1eiLNmJIiHZM9r8=\");\n\n_c = PostComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts\n  };\n};\n\nexport default connect(mapStateToProps)(PostComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostComponent.tsx"],"names":["React","useState","PostWrapper","axios","FontAwesomeIcon","faHeart","farHeart","connect","PostComponent","Props","content","filename","includes","deleteHandler","delete","id","then","console","log","window","location","reload","likes","addLike","postLiked","markPost","likeHandler","updatedLikes","Likes","JSON","stringify","post","unlikeHandler","username","description","mapStateToProps","state","posts"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport './PostComponent_style.tsx';\nimport { PostWrapper } from \"./PostComponent_style\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart} from '@fortawesome/free-regular-svg-icons'\nimport {connect} from \"react-redux\";\n\n\n\ninterface Props {\n    id?: string;\n    username?: string;\n    filename?: string;\n    description?: string;\n    likes?: number;\n    imageId?: string;\n}\n\n\nexport const PostComponent: React.FC<Props> = (Props) => {\n\n//Get images\n    let content = null;\n\n    if (Props.filename?.includes(\"jpg\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    }\n    else if (Props.filename?.includes(\"jpeg\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    }\n    else if (Props.filename?.includes(\"png\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    }\n    else if (Props.filename?.includes(\"mov\")){\n        content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} controls></video>);\n    };\n\n//Delete posts\n    const deleteHandler = () => {\n        axios.delete(\"http://localhost:5000/posts/delete/\" + Props.id).then(()=>{\n            console.log(\"image \" + Props.id + \" deleted\");\n        })\n\n        axios.delete(\"http://localhost:5000/posts/image/delete/\" + Props.filename);\n\n        window.location.reload();\n    };\n\n//Add Likes\n\n    const [likes, addLike] = useState(0);\n    const [postLiked, markPost] = useState(false);\n   \n\n    interface likeData{\n        id: String | undefined,\n        likes: Number\n    }\n\n    \n    const likeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: Props.id,\n            likes: updatedLikes,\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(true);\n\n    };\n\n    const unlikeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: Props.id,\n            likes: updatedLikes,\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(false);\n\n    }\n\n\n\n    return( \n        <PostWrapper>\n            <div className=\"post_container\" id={Props.id} >\n                <div className=\"username\">{Props.username}</div>\n                {/* <img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>\n                <video className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} controls></video> */}\n                {content}\n                <div className=\"description\">{Props.description}</div>\n                {postLiked ? \n                <button className=\"likes\" onClick={() => {addLike(likes - 1); unlikeHandler(likes - 1);}}><FontAwesomeIcon icon={faHeart}/> : {likes}</button>\n                :\n                <button className=\"likes\" onClick={() => {addLike(likes + 1); likeHandler(likes + 1);}}><FontAwesomeIcon icon= {farHeart}/> : {likes}</button>\n                }               \n                {/* You use the empty function to not pass the event to the function. instead it`s just a trigger to activate the function */}\n                <button className=\"button\" onClick={deleteHandler}>X</button>\n            </div>\n        </PostWrapper>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        posts: state.posts.posts,\n    }\n}\n\nexport default connect(mapStateToProps)(PostComponent);\n\n"]},"metadata":{},"sourceType":"module"}