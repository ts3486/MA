{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\"; // import postsReducer from \"../../store/reducers/postsReducer\";\n\nimport { ProfileWrapper } from \"./ProfileCompoent_style\";\nexport const ProfileComponent = props => {\n  _s();\n\n  var _userPosts$filename, _userPosts$filename2, _userPosts$filename3, _userPosts$filename4;\n\n  let {\n    username\n  } = useParams();\n  const userPosts = props.posts.filter(post => post.username === username); //Get images\n\n  let content = null;\n\n  if ((_userPosts$filename = userPosts.filename) === null || _userPosts$filename === void 0 ? void 0 : _userPosts$filename.includes(\"jpg\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + userPosts.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this);\n  } else if ((_userPosts$filename2 = userPosts.filename) === null || _userPosts$filename2 === void 0 ? void 0 : _userPosts$filename2.includes(\"jpeg\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + userPosts.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this);\n  } else if ((_userPosts$filename3 = userPosts.filename) === null || _userPosts$filename3 === void 0 ? void 0 : _userPosts$filename3.includes(\"png\")) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + userPosts.filename,\n      alt: \"is it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this);\n  } else if ((_userPosts$filename4 = userPosts.filename) === null || _userPosts$filename4 === void 0 ? void 0 : _userPosts$filename4.includes(\"mov\")) {\n    content = /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"image\",\n      src: \"http://localhost:5000/posts/images/\" + userPosts.filename,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: userPosts.map(post => {\n            var _post$filename, _post$filename2, _post$filename3, _post$filename4;\n\n            let content = null;\n\n            if ((_post$filename = post.filename) === null || _post$filename === void 0 ? void 0 : _post$filename.includes(\"jpg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename2 = post.filename) === null || _post$filename2 === void 0 ? void 0 : _post$filename2.includes(\"jpeg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename3 = post.filename) === null || _post$filename3 === void 0 ? void 0 : _post$filename3.includes(\"png\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename4 = post.filename) === null || _post$filename4 === void 0 ? void 0 : _post$filename4.includes(\"mov\")) {\n              content = /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this);\n            }\n\n            ;\n            return content;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileComponent, \"kpB+bRYYaU44yY7uz73ZWxXBwb0=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    auth: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileComponent); //problem is that the props loaded rn are the entire posts, although i want to filter only the users posts.\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx"],"names":["React","connect","useParams","ProfileWrapper","ProfileComponent","props","username","userPosts","posts","filter","post","content","filename","includes","map","mapStateToProps","state","auth","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router\";\n// import postsReducer from \"../../store/reducers/postsReducer\";\nimport {ProfileWrapper} from \"./ProfileCompoent_style\";\n\ninterface Props {\n    username?: any;\n    description?: string;\n    posts?: any;\n}\n\n\nexport const ProfileComponent: React.FC<Props> = (props: any) => {\n\n\n    let {username} = useParams<any>();\n\n    const userPosts = props.posts.filter((post: any) => post.username ===  username)\n\n    //Get images\n    let content = null;\n\n    if (userPosts.filename?.includes(\"jpg\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + userPosts.filename} alt=\"is it here\"></img>);\n    }\n    else if (userPosts.filename?.includes(\"jpeg\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + userPosts.filename} alt=\"is it here\"></img>);\n    }\n    else if (userPosts.filename?.includes(\"png\")){\n        content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + userPosts.filename} alt=\"is it here\"></img>);\n    }\n    else if (userPosts.filename?.includes(\"mov\")){\n        content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + userPosts.filename} controls></video>);\n    };\n\n  \n    return(\n    \n    <ProfileWrapper>\n        <div className=\"container\">\n            <div className=\"card\">\n                <h2 className=\"username\">{username}</h2>\n                <p className=\"description\"> Description </p>\n                    <div className=\"post-container\">\n                        {userPosts.map((post: any) => {\n\n                            let content = null; \n\n                            if (post.filename?.includes(\"jpg\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                            else if (post.filename?.includes(\"jpeg\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                            else if (post.filename?.includes(\"png\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                            else if (post.filename?.includes(\"mov\")){\n                                 content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} controls></video>);\n                            };\n\n                            return content;\n                        })}\n                    </div>\n            </div>\n        </div>\n    </ProfileWrapper>\n\n    );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n    posts: state.posts.posts,\n    auth: state.auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);\n\n//problem is that the props loaded rn are the entire posts, although i want to filter only the users posts."]},"metadata":{},"sourceType":"module"}