{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/LoginComponent2.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nconst NormalLoginForm = props => {\n  _s();\n\n  // const [username, handleUsername] = useState();\n  // const [password, handlePassword] = useState();\n  const onFinish = values => {\n    props.onAuth(values.username, values.password);\n    console.log('Received values of form: ', values);\n    props.history.push(\"/\");\n  };\n\n  const [form] = Form.useForm(); //   const [form, handleSubmit] = useForm<Submit>();\n  //   const onSubmit = (e: any) => {\n  //     e.preventDefault();\n  //     props.form.validateFields((err: any, values: any) => {\n  //         if(!err){\n  //             props.onAuth(values.userName, values.password);\n  //         }\n  //     })\n  //     //after logged in, redirects you to the \"/\" page.\n  //     props.history.push(\"/\");\n  //     }; \n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.auth.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errorMessage, props.loading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      form: form,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your Username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-form-button\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \"Or \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NormalLoginForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = NormalLoginForm;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// onAuth: (username: string, password: any) => dispatch(actionTypes_auth.authLogin(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLoginForm\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/LoginComponent2.tsx"],"names":["React","connect","Form","Input","Button","UserOutlined","LockOutlined","Spin","NormalLoginForm","props","onFinish","values","onAuth","username","password","console","log","history","push","form","useForm","errorMessage","error","auth","message","loading","remember","required","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { Form, Input, Button} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\ninterface Types {\n    userName: string,\n    email: string,\n    password: string,\n}\n\nconst NormalLoginForm = (props: any) => {\n\n    // const [username, handleUsername] = useState();\n    // const [password, handlePassword] = useState();\n\n\nconst onFinish = (values: any) => {\n    props.onAuth(values.username, values.password);\n    console.log('Received values of form: ', values);\n\n    props.history.push(\"/\");\n  };\n\n  const [form] = Form.useForm<Types>();\n//   const [form, handleSubmit] = useForm<Submit>();\n\n//   const onSubmit = (e: any) => {\n//     e.preventDefault();\n\n//     props.form.validateFields((err: any, values: any) => {\n//         if(!err){\n//             props.onAuth(values.userName, values.password);\n//         }\n//     })\n//     //after logged in, redirects you to the \"/\" page.\n//     props.history.push(\"/\");\n//     }; \n\n  let errorMessage = null;\n  if (props.error){\n      errorMessage = (\n          <p>{props.auth.error.message}</p>\n      )\n    }\n\n  return (\n    <div>\n        {errorMessage}\n        {\n        props.loading ? \n\n        <Spin/> :\n\n        <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        form={form}\n        >\n        <Form.Item\n            name=\"username\"\n            rules={[{ required: true, message: 'Please input your Username!' }]}\n        >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your Password!' }]}\n        >\n            <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n            />\n        </Form.Item>\n        {/* <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <a className=\"login-form-forgot\" href=\"/forgotpassword\">\n            Forgot password\n            </a>\n        </Form.Item> */}\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\n            Log in\n            </Button>\n            Or <a href=\"/signup\">Signup</a>\n        </Form.Item>\n        </Form>\n        }\n    </div>   \n  );\n};\n\n\n\nconst mapStateToProps = (state: any) => {\n    return{\n        loading: state.auth.loading,\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n        // onAuth: (username: string, password: any) => dispatch(actionTypes_auth.authLogin(username, password)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}