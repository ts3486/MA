{"ast":null,"code":"import axios from \"axios\";\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"expirationDate\");\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const newDate = new Date();\n      const expirationDate = new Date(newDate.getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    });\n  };\n};\nexport const authLogout = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/actions/auth_actions.tsx"],"names":["axios","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","type","authSuccess","token","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","newDate","Date","expirationDate","getTime","setItem","authLogout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,aAArB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMM,WAAW,GAAIC,KAAD,IAAgB;AACvC,SAAO;AACHF,IAAAA,IAAI,EAAEJ,YADH;AAEHM,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAEH,SADH;AAEHO,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACH,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAA4B;AACxD,SAAQC,QAAD,IAAmB;AACtBC,IAAAA,UAAU,CAAC,MAAK;AACZD,MAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACH,KAFS,EAEPI,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AASP,OAAO,MAAMG,SAAS,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAiD;AACtE,SAAQJ,QAAD,IAAmB;AACtBA,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACAL,IAAAA,KAAK,CAACqB,IAAN,CAAW,uCAAX,EAAoD;AAChDF,MAAAA,QAAQ,EAAEA,QADsC;AAEhDC,MAAAA,QAAQ,EAAEA;AAFsC,KAApD,EAICE,IAJD,CAIMC,GAAG,IAAI;AACT,YAAMf,KAAK,GAAGe,GAAG,CAACC,IAAJ,CAASC,GAAvB;AACA,YAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,YAAMC,cAAmB,GAAG,IAAID,IAAJ,CAASD,OAAO,CAACG,OAAR,KAAoB,OAAK,IAAlC,CAA5B;AACAjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BtB,KAA9B;AACAI,MAAAA,YAAY,CAACkB,OAAb,CAAqB,gBAArB,EAAuCF,cAAvC;AACAZ,MAAAA,QAAQ,CAACT,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAQ,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH,KAZD;AAaH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMiB,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHzB,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START,\n    }\n}\n\nexport const authSuccess = (token: any) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n    }\n}\n\nexport const authFail = (error: any) => {\n    return {\n        type: AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"expirationDate\")\n}\n\nexport const checkAuthTimeout = (expirationTime: number) => {\n    return (dispatch: any) => {\n        setTimeout(()=> {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username: string, password: string | number) => {\n    return (dispatch: any) => {\n        dispatch(authStart());\n        axios.post(\"http://127.0.0.1:8000/rest-auth/login\", {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const newDate = new Date();\n            const expirationDate: any = new Date(newDate.getTime() + 3600*1000);\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n    }\n}\n\nexport const authLogout = () => {\n    return {\n        type: AUTH_LOGOUT,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}