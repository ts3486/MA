{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostsPageCompoenent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport PostComponent from \"./PostComponent\";\nimport FormComponent from \"../Forms/FormComponent\";\nimport PostsPageWrapper from \"./PostsPageComponent_style\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nexport const PostsPageComponent = props => {\n  _s();\n\n  const [modalIsOpen, setModalState] = useState(false);\n  return /*#__PURE__*/_jsxDEV(PostsPageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Music Accelerator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), props.posts.map((post, key) => {\n          return /*#__PURE__*/_jsxDEV(PostComponent, {\n            id: post._id,\n            username: post.username,\n            filename: post.filename,\n            description: post.description,\n            likes: post.likes\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), props.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => setModalState(true),\n          children: \" Add Post \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          onRequestClose: () => setModalState(false),\n          ariaHideApp: false,\n          children: /*#__PURE__*/_jsxDEV(FormComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsPageComponent, \"tJM5+iGfEA1ugVcQXiyKzSJpUuo=\");\n\n_c = PostsPageComponent;\n\nconst mapStateToProps = state => {\n  return {\n    text: state.posts.text,\n    posts: state.posts.posts,\n    data: state.posts.data,\n    image: state.posts.images,\n    //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n    isAuthenticated: state.auth.token !== null,\n    user: state.auth.user\n  };\n}; //   const mapDispatchToProps = (dispatch: any) => {\n//     return{\n//         fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n//         awaitData: () => dispatch(actionTypes_posts.awaitData()),\n//         loadUser: () => dispatch(actionTypes_auth.loadUser()),\n//         countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n//     }\n//   }\n\n\nexport default connect(mapStateToProps)(PostsPageComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsPageComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostsPageCompoenent.tsx"],"names":["React","useState","Modal","PostComponent","FormComponent","PostsPageWrapper","connect","Button","PostsPageComponent","props","modalIsOpen","setModalState","posts","map","post","key","_id","username","filename","description","likes","isAuthenticated","e","mapStateToProps","state","text","data","image","images","auth","token","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAgB;AAAA;;AAE9C,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BV,QAAQ,CAAC,KAAD,CAA7C;AAEA,sBACI,QAAC,gBAAD;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKQ,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAYC,GAAZ,KAAyB;AACtC,8BAAO,QAAC,aAAD;AAA8B,YAAA,EAAE,EAAGD,IAAI,CAACE,GAAxC;AAA6C,YAAA,QAAQ,EAAEF,IAAI,CAACG,QAA5D;AAAsE,YAAA,QAAQ,EAAEH,IAAI,CAACI,QAArF;AAA+F,YAAA,WAAW,EAAEJ,IAAI,CAACK,WAAjH;AAA8H,YAAA,KAAK,EAAEL,IAAI,CAACM;AAA1I,aAAoBN,IAAI,CAACE,GAAzB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKP,KAAK,CAACY,eAAN,gBACD;AAAA,gCAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAGC,CAAD,IAAOX,aAAa,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,MAAM,EAAED,WAAf;AAA4B,UAAA,cAAc,EAAE,MAAMC,aAAa,CAAC,KAAD,CAA/D;AAAwE,UAAA,WAAW,EAAE,KAArF;AAAA,iCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAQC,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA5BM;;GAAMH,kB;;KAAAA,kB;;AA8Bb,MAAMe,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACZ,KAAN,CAAYa,IADf;AAEHb,IAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYA,KAFhB;AAGHc,IAAAA,IAAI,EAAEF,KAAK,CAACZ,KAAN,CAAYc,IAHf;AAIHC,IAAAA,KAAK,EAAEH,KAAK,CAACZ,KAAN,CAAYgB,MAJhB;AAKH;AACAP,IAAAA,eAAe,EAAEG,KAAK,CAACK,IAAN,CAAWC,KAAX,KAAqB,IANnC;AAOHC,IAAAA,IAAI,EAAEP,KAAK,CAACK,IAAN,CAAWE;AAPd,GAAP;AASD,CAVH,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,eAAezB,OAAO,CAACiB,eAAD,CAAP,CAAyBf,kBAAzB,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport PostComponent from \"./PostComponent\";\nimport FormComponent from \"../Forms/FormComponent\";\nimport PostsPageWrapper from \"./PostsPageComponent_style\";\nimport {connect} from \"react-redux\";\nimport {Button} from \"@material-ui/core\";\n\nexport const PostsPageComponent = (props: any) => {\n\n    const [modalIsOpen, setModalState] = useState(false);\n\n    return(\n        <PostsPageWrapper>\n            <div>\n                <div className=\"container\">\n                    <h1>Music Accelerator</h1>\n                    {props.posts.map((post: any, key: any) => {\n                        return <PostComponent key={post._id} id= {post._id} username={post.username} filename={post.filename} description={post.description} likes={post.likes}/>   \n                    })}      \n                </div>\n\n                {props.isAuthenticated ? \n                <div>\n                    {/* must receive the click event first for a button onClick function */}\n                    <Button onClick={(e) => setModalState(true)}> Add Post </Button>\n                    <Modal isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n                        <FormComponent/> \n                    </Modal>\n                </div>\n                : null\n                }\n            </div>\n        </PostsPageWrapper>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        text: state.posts.text,\n        posts: state.posts.posts,\n        data: state.posts.data,\n        image: state.posts.images,\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        isAuthenticated: state.auth.token !== null,\n        user: state.auth.user,\n    };\n  };\n  \n//   const mapDispatchToProps = (dispatch: any) => {\n//     return{\n//         fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n//         awaitData: () => dispatch(actionTypes_posts.awaitData()),\n//         loadUser: () => dispatch(actionTypes_auth.loadUser()),\n//         countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n//     }\n//   }\n  \n  export default connect(mapStateToProps)(PostsPageComponent);"]},"metadata":{},"sourceType":"module"}