{"ast":null,"code":"import axios from \"axios\";\nexport const AWAIT_DATA = \"AWAIT_DATA\";\nexport const DECREMENT = \"DECREMENT\";\nexport const ON_MOUNT = \"ON_MOUNT\";\nexport const onMount = posts => {\n  return {\n    type: ON_MOUNT,\n    posts: posts\n  };\n};\nexport const fetchPosts = () => {\n  return dispatch => {\n    axios.get(\"http://localhost:5000/posts\").then(response => {\n      let posts = response.data;\n      return posts;\n    }).then(posts => dispatch(onMount(posts)));\n  };\n};\nexport const scanPostLikes = username => {\n  return dispatch => {\n    axios.get(\"http://localhost:5000/posts\").then(response => {\n      let posts = response.data;\n      let userPosts = posts.filter(post => {\n        return post.username = username;\n      });\n      let totalUserLikes = 0;\n      userPosts.forEach(post => {\n        totalUserLikes += post.likes;\n        return totalUserLikes;\n      });\n    }).then(totalUserLikes => {\n      dispatch({\n        type: USER_LOADED,\n        payload: totalUserLikes\n      });\n    });\n  };\n}; // export const fetchImages = () => {\n//     return (dispatch: any) => {\n//         axios.get(\"http://localhost:5000/posts\").then((response) => {\n//         let posts: string | number = response.data;\n//         return posts;\n//         }).then((posts)=> dispatch(onMount(posts)));\n//     };\n// };\n\nexport const awaitData = () => {\n  return {\n    type: AWAIT_DATA\n  };\n};","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/actions/post_actions.tsx"],"names":["axios","AWAIT_DATA","DECREMENT","ON_MOUNT","onMount","posts","type","fetchPosts","dispatch","get","then","response","data","scanPostLikes","username","userPosts","filter","post","totalUserLikes","forEach","likes","USER_LOADED","payload","awaitData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAGP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA0B;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEH,QADH;AAEHE,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAmB;AACtBR,IAAAA,KAAK,CAACS,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC5D,UAAIN,KAAU,GAAGM,QAAQ,CAACC,IAA1B;AACA,aAAOP,KAAP;AACC,KAHD,EAGGK,IAHH,CAGSL,KAAD,IAAUG,QAAQ,CAACJ,OAAO,CAACC,KAAD,CAAR,CAH1B;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMQ,aAAa,GAAIC,QAAD,IAAsB;AAC/C,SAAQN,QAAD,IAAmB;AACtBR,IAAAA,KAAK,CAACS,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC5D,UAAIN,KAAU,GAAGM,QAAQ,CAACC,IAA1B;AAEA,UAAIG,SAAS,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAe;AACxC,eAAOA,IAAI,CAACH,QAAL,GAAgBA,QAAvB;AACH,OAFe,CAAhB;AAIA,UAAII,cAAc,GAAG,CAArB;AAEAH,MAAAA,SAAS,CAACI,OAAV,CAAmBF,IAAD,IAAe;AAC7BC,QAAAA,cAAc,IAAID,IAAI,CAACG,KAAvB;AAEA,eAAOF,cAAP;AACH,OAJD;AAMC,KAfD,EAeGR,IAfH,CAeSQ,cAAD,IAAmB;AACvBV,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAEe,WADD;AAELC,QAAAA,OAAO,EAAEJ;AAFJ,OAAD,CAAR;AAGG,KAnBP;AAoBH,GArBD;AAsBH,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHjB,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const AWAIT_DATA = \"AWAIT_DATA\";\nexport const DECREMENT = \"DECREMENT\";\nexport const ON_MOUNT = \"ON_MOUNT\";\n\n\nexport const onMount = (posts: string|number) => {\n    return {\n        type: ON_MOUNT,\n        posts: posts,\n    }\n}\n\nexport const fetchPosts = () => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        let posts: any = response.data;\n        return posts;\n        }).then((posts)=> dispatch(onMount(posts)));\n    };\n};\n\nexport const scanPostLikes = (username: string) => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        let posts: any = response.data;\n     \n        let userPosts = posts.filter((post: any) => {\n            return post.username = username;\n        });\n\n        let totalUserLikes = 0; \n\n        userPosts.forEach((post: any) => {\n            totalUserLikes += post.likes;\n\n            return totalUserLikes\n        })\n\n        }).then((totalUserLikes)=> {\n            dispatch({\n                type: USER_LOADED,\n                payload: totalUserLikes,\n            })});\n    };\n}\n\n// export const fetchImages = () => {\n//     return (dispatch: any) => {\n//         axios.get(\"http://localhost:5000/posts\").then((response) => {\n//         let posts: string | number = response.data;\n//         return posts;\n//         }).then((posts)=> dispatch(onMount(posts)));\n//     };\n// };\n \nexport const awaitData = () => {\n    return {\n        type: AWAIT_DATA,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}