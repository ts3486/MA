{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Forms/FormComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormWrapper } from \"./FormComponent_style\";\nimport axios from \"axios\";\nimport { TextField } from '@material-ui/core';\nexport const FormComponent = props => {\n  _s();\n\n  const [filename, setFilename] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [description, setDesc] = useState(\"\");\n\n  const postHandler = e => {\n    e.preventDefault();\n    const postData = {\n      username: props.user.username,\n      filename: filename,\n      description: description,\n      likes: \"\",\n      date: new Date()\n    }; //form data can only be called once in one form?\n\n    const imageData = new FormData();\n    imageData.append(\"image\", image);\n    axios.post(\"http://localhost:5000/posts/add\", postData).then(response => {\n      console.log(response, \"Post added!\");\n    }).catch(error => console.log(error));\n    axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(response => {\n      console.log(imageData);\n      console.log(response, \"Image added!\");\n    }).catch(error => console.log(error)).then(() => window.location.reload());\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      action: \"/upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        id: \"input\",\n        formEncType: \"multipart/form-data\",\n        onChange: e => {\n          setImage(e.target.files[0]);\n          setFilename(e.target.files[0].name);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standared-basic\",\n        label: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"input\",\n        value: description,\n        onChange: e => setDesc(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        type: \"submit\",\n        className: \"btn btn-success\",\n        onClick: postHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormComponent, \"OdxaX/gQ6JGkghl8v59eLEgay2Q=\");\n\n_c = FormComponent;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    loggedIn: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(FormComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Forms/FormComponent.tsx"],"names":["React","useState","connect","FormWrapper","axios","TextField","FormComponent","props","filename","setFilename","image","setImage","description","setDesc","postHandler","e","preventDefault","postData","username","user","likes","date","Date","imageData","FormData","append","post","then","response","console","log","catch","error","window","location","reload","target","files","name","value","mapStateToProps","state","auth","loggedIn","isAuthenticated"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport {connect} from \"react-redux\";\nimport {FormWrapper} from \"./FormComponent_style\"\nimport axios from \"axios\";\nimport { TextField } from '@material-ui/core';\n\ninterface Props{\n\n}\n\nexport const FormComponent: React.FC<Props> = (props: any) => {\n\n    const [filename, setFilename] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [description, setDesc] = useState(\"\");\n\n    const postHandler = (e: any) => {\n        e.preventDefault();\n\n        const postData = {\n            username: props.user.username,\n            filename: filename,\n            description: description,\n            likes: \"\",\n            date: new Date(),\n        }\n\n        //form data can only be called once in one form?\n        const imageData: any = new FormData();\n\n\n        imageData.append(\"image\", image)\n          \n        axios.post(\"http://localhost:5000/posts/add\", postData).then(response => {\n          console.log(response, \"Post added!\"); \n          }).catch(error => console.log(error))\n\n        axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(response => {\n            console.log(imageData);\n            console.log(response, \"Image added!\");\n        }).catch( error => console.log(error))\n        .then(() => window.location.reload())\n      }\n\n    return(\n    \n    <FormWrapper>\n            <form className=\"form\" action=\"/upload\">\n\n                <label>Image:</label>\n                    <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"input\"\n                    formEncType=\"multipart/form-data\"\n                    onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}\n                    required\n                    /><br /><br />\n                <TextField id=\"standared-basic\" label=\"description\"/>\n                    <input\n                    type=\"text\"\n                    name=\"description\"\n                    id=\"input\"\n                    value={description}\n                    onChange={(e)=> setDesc(e.target.value)}\n                    required\n                    /><br /><br />\n                    \n                    {/* don`t call the function at the spot, because you won`t get the e and it become asynchronous. onClick passes \n                    the click event to postHandler using the reference. Also dont use onSubmit on a button, it`s for a form, \n                    Just use a callback (reference) to refer to the function defined.   */}\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-success\" onClick={postHandler}>Submit</button>\n                    \n            </form>\n    </FormWrapper>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        user: state.auth.user,\n        loggedIn: state.auth.isAuthenticated,\n    }\n}\n\nexport default connect(mapStateToProps)(FormComponent);\n\n"]},"metadata":{},"sourceType":"module"}