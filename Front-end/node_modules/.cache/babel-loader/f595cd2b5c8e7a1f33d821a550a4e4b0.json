{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\"; // import postsReducer from \"../../store/reducers/postsReducer\";\n\nimport { ProfileWrapper } from \"./ProfileCompoent_style\";\nimport { Avatar, Button } from \"@material-ui/core\";\nexport const ProfileComponent = props => {\n  _s();\n\n  let {\n    username\n  } = useParams();\n  const [userName, setUsername] = useState(username);\n  const [description, setDescription] = useState(\"\");\n  const [modalIsOpen, setModalState] = useState(false);\n  const [modal2IsOpen, setModal2State] = useState(false);\n  useEffect(() => {\n    if (props.totalLikes >= 2) {\n      setModal2State(true);\n    }\n\n    if (props.user.username != null) {\n      setUsername(props.user.username);\n    }\n  }, [props.totalLikes, props.user.username]);\n  const userPosts = props.posts.filter(post => post.username === username);\n  const profileData = {\n    newUsername: userName,\n    description: description\n  }; //change Profile Info\n\n  const setProfile = () => {\n    axios.post(\"http://localhost:5000/users/profile/update/\" + username, profileData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"username\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likes\",\n          children: props.totalLikes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [\" \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"descButton\",\n          variant: \"contained\",\n          color: \"default\",\n          onClick: e => setModalState(true),\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          onRequestClose: () => setModalState(false),\n          ariaHideApp: false,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              id: \"input\",\n              value: userName,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              id: \"input\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"submit\",\n              type: \"button\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: e => {\n                setModalState(false);\n                setProfile();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-container\",\n          children: userPosts.map(post => {\n            var _post$filename, _post$filename2, _post$filename3, _post$filename4;\n\n            let content = null;\n\n            if ((_post$filename = post.filename) === null || _post$filename === void 0 ? void 0 : _post$filename.includes(\"jpg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename2 = post.filename) === null || _post$filename2 === void 0 ? void 0 : _post$filename2.includes(\"jpeg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename3 = post.filename) === null || _post$filename3 === void 0 ? void 0 : _post$filename3.includes(\"png\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename4 = post.filename) === null || _post$filename4 === void 0 ? void 0 : _post$filename4.includes(\"mov\")) {\n              content = /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                controls: true\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this);\n            }\n\n            ;\n            return content;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal2IsOpen,\n        onRequestClose: () => setModal2State(false),\n        ariaHideApp: false,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Congratulations!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"You have successfully reached # followers and # likes!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Now is the time to solidify your fanbase in other platforms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileComponent, \"UyeKjLT6klMhsEVo+lqqfEkndEE=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    user: state.auth.user,\n    totalLikes: state.user.totalLikes\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileComponent); //problem is that the props loaded rn are the entire posts, although i want to filter only the users posts.\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx"],"names":["React","useState","useEffect","Modal","connect","useParams","axios","ProfileWrapper","Avatar","Button","ProfileComponent","props","username","userName","setUsername","description","setDescription","modalIsOpen","setModalState","modal2IsOpen","setModal2State","totalLikes","user","userPosts","posts","filter","post","profileData","newUsername","setProfile","e","target","value","map","content","filename","includes","mapStateToProps","state","auth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,mBAA7B;AASA,OAAO,MAAMC,gBAAiC,GAAIC,KAAD,IAAgB;AAAA;;AAE7D,MAAI;AAACC,IAAAA;AAAD,MAAaP,SAAS,EAA1B;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACW,QAAD,CAAxC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,EAAcC,aAAd,IAA+BjB,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACkB,YAAD,EAAeC,cAAf,IAAiCnB,QAAQ,CAAC,KAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGS,KAAK,CAACU,UAAN,IAAoB,CAAvB,EAAyB;AACrBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAED,QAAGT,KAAK,CAACW,IAAN,CAAWV,QAAX,IAAuB,IAA1B,EAA+B;AAC3BE,MAAAA,WAAW,CAACH,KAAK,CAACW,IAAN,CAAWV,QAAZ,CAAX;AACH;AAEJ,GAVQ,EAUN,CAACD,KAAK,CAACU,UAAP,EAAmBV,KAAK,CAACW,IAAN,CAAWV,QAA9B,CAVM,CAAT;AAYA,QAAMW,SAAS,GAAGZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAeA,IAAI,CAACd,QAAL,KAAmBA,QAArD,CAAlB;AAEA,QAAMe,WAAW,GAAG;AAChBC,IAAAA,WAAW,EAAEf,QADG;AAEhBE,IAAAA,WAAW,EAAEA;AAFG,GAApB,CAvB6D,CA4B7D;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACrBvB,IAAAA,KAAK,CAACoB,IAAN,CAAW,gDAAgDd,QAA3D,EAAqEe,WAArE;AACH,GAFD;;AAMA,sBAEA,QAAC,cAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA,oBAA0Bd;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBF,KAAK,CAACU;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,0BAA+BN,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAC,WAAvC;AAAmD,UAAA,KAAK,EAAC,SAAzD;AAAmE,UAAA,OAAO,EAAGe,CAAD,IAAOZ,aAAa,CAAC,IAAD,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,KAAD;AAAO,UAAA,MAAM,EAAED,WAAf;AAA4B,UAAA,cAAc,EAAE,MAAMC,aAAa,CAAC,KAAD,CAA/D;AAAwE,UAAA,WAAW,EAAE,KAArF;AAAA,iCACA;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,oCAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXA,eAYI;AACA,cAAA,IAAI,EAAC,MADL;AAEA,cAAA,IAAI,EAAC,UAFL;AAGA,cAAA,EAAE,EAAC,OAHH;AAIA,cAAA,KAAK,EAAEL,QAJP;AAKA,cAAA,QAAQ,EAAGiB,CAAD,IAAMhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3B;AAMA,cAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAmBM;AAAA;AAAA;AAAA;AAAA,oBAnBN,eAmBY;AAAA;AAAA;AAAA;AAAA,oBAnBZ,eAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBA,eAsBI;AACA,cAAA,IAAI,EAAC,MADL;AAEA,cAAA,IAAI,EAAC,aAFL;AAGA,cAAA,EAAE,EAAC,OAHH;AAIA,cAAA,KAAK,EAAEjB,WAJP;AAKA,cAAA,QAAQ,EAAGe,CAAD,IAAMd,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAL9B;AAMA,cAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eA6BM;AAAA;AAAA;AAAA;AAAA,oBA7BN,eA6BY;AAAA;AAAA;AAAA;AAAA,oBA7BZ,eAgCI,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,QAAX;AAAoB,cAAA,IAAI,EAAC,QAAzB;AAAkC,cAAA,OAAO,EAAC,WAA1C;AAAsD,cAAA,KAAK,EAAC,SAA5D;AAAsE,cAAA,OAAO,EAAGF,CAAD,IAAO;AAACZ,gBAAAA,aAAa,CAAC,KAAD,CAAb;AAAsBW,gBAAAA,UAAU;AAAI,eAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBANJ,eA6CI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACKN,SAAS,CAACU,GAAV,CAAeP,IAAD,IAAe;AAAA;;AAE1B,gBAAIQ,OAAO,GAAG,IAAd;;AAEA,kCAAIR,IAAI,CAACS,QAAT,mDAAI,eAAeC,QAAf,CAAwB,KAAxB,CAAJ,EAAmC;AAC3BF,cAAAA,OAAO,gBAAI;AAAyB,gBAAA,SAAS,EAAC,OAAnC;AAA2C,gBAAA,GAAG,EAAE,wCAAwCR,IAAI,CAACS,QAA7F;AAAuG,gBAAA,GAAG,EAAC;AAA3G,iBAAUT,IAAI,CAACS,QAAf;AAAA;AAAA;AAAA;AAAA,sBAAX;AACH,aAFL,MAGM,uBAAIT,IAAI,CAACS,QAAT,oDAAI,gBAAeC,QAAf,CAAwB,MAAxB,CAAJ,EAAoC;AAClCF,cAAAA,OAAO,gBAAI;AAAyB,gBAAA,SAAS,EAAC,OAAnC;AAA2C,gBAAA,GAAG,EAAE,wCAAwCR,IAAI,CAACS,QAA7F;AAAuG,gBAAA,GAAG,EAAC;AAA3G,iBAAUT,IAAI,CAACS,QAAf;AAAA;AAAA;AAAA;AAAA,sBAAX;AACH,aAFC,MAGD,uBAAIT,IAAI,CAACS,QAAT,oDAAI,gBAAeC,QAAf,CAAwB,KAAxB,CAAJ,EAAmC;AAChCF,cAAAA,OAAO,gBAAI;AAAyB,gBAAA,SAAS,EAAC,OAAnC;AAA2C,gBAAA,GAAG,EAAE,wCAAwCR,IAAI,CAACS,QAA7F;AAAuG,gBAAA,GAAG,EAAC;AAA3G,iBAAUT,IAAI,CAACS,QAAf;AAAA;AAAA;AAAA;AAAA,sBAAX;AACH,aAFA,MAGA,uBAAIT,IAAI,CAACS,QAAT,oDAAI,gBAAeC,QAAf,CAAwB,KAAxB,CAAJ,EAAmC;AAC/BF,cAAAA,OAAO,gBAAI;AAA2B,gBAAA,SAAS,EAAC,OAArC;AAA6C,gBAAA,GAAG,EAAE,wCAAwCR,IAAI,CAACS,QAA/F;AAAyG,gBAAA,QAAQ;AAAjH,iBAAYT,IAAI,CAACS,QAAjB;AAAA;AAAA;AAAA;AAAA,sBAAX;AACJ;;AAAA;AAEL,mBAAOD,OAAP;AACH,WAlBA;AADL;AAAA;AAAA;AAAA;AAAA,gBA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAsEI,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEf,YAAf;AAA6B,QAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAjE;AAA0E,QAAA,WAAW,EAAE,KAAvF;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFA;AAkFH,CAtHM;;GAAMV,gB;UAEQL,S;;;KAFRK,gB;;AAwHb,MAAM2B,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAM;AACNd,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYA,KADb;AAENF,IAAAA,IAAI,EAAEgB,KAAK,CAACC,IAAN,CAAWjB,IAFX;AAGND,IAAAA,UAAU,EAAEiB,KAAK,CAAChB,IAAN,CAAWD;AAHjB,GAAN;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACiC,eAAD,CAAP,CAAyB3B,gBAAzB,CAAf,C,CAEA","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Modal from \"react-modal\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\n// import postsReducer from \"../../store/reducers/postsReducer\";\nimport {ProfileWrapper} from \"./ProfileCompoent_style\";\nimport {Avatar, Button} from \"@material-ui/core\";\n\ninterface Props {\n    username?: any;\n    description?: string;\n    posts?: any;\n}\n\n\nexport const ProfileComponent: React.FC<Props> = (props: any) => {\n\n    let {username} = useParams<any>();\n\n    const [userName, setUsername] = useState(username);\n    const [description, setDescription] = useState(\"\");\n    const [modalIsOpen, setModalState] = useState(false);\n    const [modal2IsOpen, setModal2State] = useState(false);\n\n    useEffect(() => {\n\n        if(props.totalLikes >= 2){\n            setModal2State(true);\n        }\n        \n        if(props.user.username != null){\n            setUsername(props.user.username);\n        }\n\n    }, [props.totalLikes, props.user.username])\n\n    const userPosts = props.posts.filter((post: any) => post.username ===  username)\n\n    const profileData = {\n        newUsername: userName,\n        description: description,\n    }\n\n    //change Profile Info\n    \n    const setProfile = () => {\n        axios.post(\"http://localhost:5000/users/profile/update/\" + username, profileData);\n    }\n\n   \n\n    return(\n    \n    <ProfileWrapper>\n        <div className=\"container\">\n\n            <div className=\"card\">\n                <Avatar>U</Avatar>\n                <h2 className=\"username\">{userName}</h2>\n                <div className=\"likes\">{props.totalLikes}</div>\n                <div className=\"description\"> {description}</div>\n                <Button className=\"descButton\" variant=\"contained\" color=\"default\" onClick={(e) => setModalState(true)}>Edit Profile</Button>\n                <Modal　isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n                <form className=\"form\">\n\n                {/* <label>Image:</label>\n                    <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"input\"\n                    formEncType=\"multipart/form-data\"\n                    // value={filename}\n                    onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}   \n                    />  */}\n                <label>Name:</label>\n                    <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"input\"\n                    value={userName}\n                    onChange={(e)=> setUsername(e.target.value)}\n                    required\n                    /><br /><br />\n                \n                <label>Description:</label>\n                    <input\n                    type=\"text\"\n                    name=\"description\"\n                    id=\"input\"\n                    value={description}\n                    onChange={(e)=> setDescription(e.target.value)}\n                    required\n                    /><br /><br />\n                    \n                  \n                    <Button id=\"submit\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => {setModalState(false); setProfile();}}>Submit</Button>\n                    \n            </form>\n                   \n                </Modal>\n\n                <div className=\"posts-container\">\n                    {userPosts.map((post: any) => {\n\n                        let content = null; \n\n                        if (post.filename?.includes(\"jpg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                         else if (post.filename?.includes(\"jpeg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"png\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"mov\")){\n                                 content = (<video key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} controls></video>);\n                            };    \n    \n                        return content;       \n                    })}\n                </div>\n            </div>\n\n            <Modal isOpen={modal2IsOpen} onRequestClose={() => setModal2State(false)} ariaHideApp={false}>\n                <h1> Congratulations!!!</h1>\n                <div>You have successfully reached # followers and # likes!!</div>\n                <div>Now is the time to solidify your fanbase in other platforms</div>\n            </Modal>\n        </div>\n    </ProfileWrapper>\n\n    );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n    posts: state.posts.posts,\n    user: state.auth.user,\n    totalLikes: state.user.totalLikes,\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);\n\n//problem is that the props loaded rn are the entire posts, although i want to filter only the users posts."]},"metadata":{},"sourceType":"module"}