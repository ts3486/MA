{"ast":null,"code":"// import getState from 'react';\nimport * as actionTypes from \"../actions\"; // interface Props {\n//     name: string;\n//     image: string;\n//     likes: number;\n// };\n// {name: \"name1\", image: \"image1\", desc: \"desc1\", likes: 1}, {name: \"name2\", image: \"image2\", desc: \"desc2\", likes: 2}\n\nconst initialState = {\n  posts: [],\n  text: \"hello\",\n  data: false\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AWAIT_DATA:\n      return { ...state,\n        data: true\n      };\n\n    case actionTypes.DECREMENT:\n      return { ///update state immutably. Don`t mutate old state, just pull old state and update\n        ...state,\n        text: state.text.splice(0, 1)\n      };\n\n    case actionTypes.ON_MOUNT:\n      return { //use the ... spread operator to spread and copy the current state\n        ...state,\n        //to update an array, use concat to \n        posts: state.posts.concat(action.array)\n      };\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/reducers/reducer.tsx"],"names":["actionTypes","initialState","posts","text","data","rootReducer","state","action","type","AWAIT_DATA","DECREMENT","splice","ON_MOUNT","concat","array"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,OAFW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAGL,YAAd,EAA4BM,MAA5B,KAA4C;AAG5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,CAACS,UAAjB;AACI,aAAM,EACJ,GAAGH,KADC;AAEJF,QAAAA,IAAI,EAAE;AAFF,OAAN;;AAKJ,SAAKJ,WAAW,CAACU,SAAjB;AACI,aAAM,EACF;AACA,WAAGJ,KAFD;AAGFH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWQ,MAAX,CAAkB,CAAlB,EAAoB,CAApB;AAHJ,OAAN;;AAMJ,SAAKX,WAAW,CAACY,QAAjB;AACI,aAAO,EACH;AACA,WAAGN,KAFA;AAGH;AACAJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYW,MAAZ,CAAmBN,MAAM,CAACO,KAA1B;AAJJ,OAAP;AAfR;;AAuBA,SAAOR,KAAP;AACH,CA3BD;;AA8BA,eAAeD,WAAf","sourcesContent":["// import getState from 'react';\nimport * as actionTypes from \"../actions\"\n\n// interface Props {\n//     name: string;\n//     image: string;\n//     likes: number;\n// };\n\n// {name: \"name1\", image: \"image1\", desc: \"desc1\", likes: 1}, {name: \"name2\", image: \"image2\", desc: \"desc2\", likes: 2}\n\nconst initialState = {\n    posts: [],\n    text: \"hello\",\n    data: false\n};\n\n\nconst rootReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.AWAIT_DATA:\n            return{\n              ...state,\n              data: true\n            };\n        \n        case actionTypes.DECREMENT:\n            return{\n                ///update state immutably. Don`t mutate old state, just pull old state and update\n                ...state,\n                text: state.text.splice(0,1)\n            };\n\n        case actionTypes.ON_MOUNT:\n            return {\n                //use the ... spread operator to spread and copy the current state\n                ...state,\n                //to update an array, use concat to \n                posts: state.posts.concat(action.array)\n            };      \n    } \n\n    return state;\n}\n\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}