{"ast":null,"code":"// import React, { Component } from 'react';\n// import axios from \"axios\";\n// interface stateTypes {\n//     name: string;\n//     image: string;\n//     likes: number;\n// };\nconst initialState = {\n  posts: [{\n    name: \"name1\",\n    image: \"image1\",\n    likes: 1\n  }],\n  text: \"hello\"\n}; // componentDidMount(){\n//     axios.get(\"http://127.0.0.1:8000/posts/posts/\").then((response) => {\n//       let posts: string | number = response.data;\n//       //putting the content in state\n//       this.setState({posts: posts})\n//     })\n//   }\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {};\n\n    case \"DECREMENT\":\n      return { ///update state immutably. Don`t mutate old state, just pull old state and update\n        ...state\n      };\n    // case \"STATE\":\n    //     return{\n    //         ...state,\n    //         newState: state = \n    //     };\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/reducer.tsx"],"names":["initialState","posts","name","image","likes","text","rootReducer","state","action","type"],"mappings":"AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE,QAAvB;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAAD,CADU;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAGP,YAAd,EAA4BQ,MAA5B,KAA4C;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAM,EAAN;;AAIJ,SAAK,WAAL;AACI,aAAM,EACF;AACA,WAAGF;AAFD,OAAN;AAKJ;AACA;AACA;AACA;AACA;AAhBJ;;AAqBA,SAAOA,KAAP;AACH,CAvBD;;AA0BA,eAAeD,WAAf","sourcesContent":["// import React, { Component } from 'react';\n// import axios from \"axios\";\n\n\n// interface stateTypes {\n//     name: string;\n//     image: string;\n//     likes: number;\n// };\n\nconst initialState = {\n    posts: [{name: \"name1\", image: \"image1\", likes: 1}],\n    text: \"hello\",\n};\n\n// componentDidMount(){\n//     axios.get(\"http://127.0.0.1:8000/posts/posts/\").then((response) => {\n//       let posts: string | number = response.data;\n//       //putting the content in state\n//       this.setState({posts: posts})\n//     })\n//   }\n\nconst rootReducer = (state: any = initialState, action: any) => {\n    switch(action.type){\n        case \"INCREMENT\":\n            return{\n              \n            };\n        \n        case \"DECREMENT\":\n            return{\n                ///update state immutably. Don`t mutate old state, just pull old state and update\n                ...state,\n            };\n\n        // case \"STATE\":\n        //     return{\n        //         ...state,\n        //         newState: state = \n        //     };\n        \n        \n    }\n\n    return state;\n}\n\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}