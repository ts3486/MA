{"version":3,"sources":["store/actions/post_actions.tsx","store/actions/error_actions.tsx","store/actions/auth_actions.tsx","store/actions/user_actions.tsx","Components/Posts/PostComponent_style.tsx","Components/Posts/PostComponent.tsx","Components/Forms/FormComponent_style.tsx","Components/Forms/FormComponent.tsx","Components/Posts/PostsPageComponent_style.tsx","Components/Posts/PostsPageCompoenent.tsx","Components/Login/LoginComponent_style.tsx","Components/Login/LoginComponent.tsx","Components/Login/SignupComponent_style.tsx","Components/Login/SignupComponent.tsx","Components/Navbar/NavComponent.tsx","Components/User/ProfileCompoent_style.tsx","Components/User/ProfileComponent.tsx","App.tsx","reportWebVitals.ts","store/reducers/authReducer.tsx","store/reducers/userReducer.tsx","store/reducers/postsReducer.tsx","store/reducers/errorReducer.tsx","index.tsx"],"names":["AWAIT_DATA","ON_MOUNT","fetchPosts","dispatch","axios","get","then","response","data","posts","type","onMount","catch","err","console","log","returnErrors","msg","status","id","actionTypes","payload","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","GET_ERRORS","CLEAR_ERRORS","tokenConfig","getState","token","auth","config","headers","TOTAL_LIKES","PostWrapper","styled","div","connect","state","user","isAuthenticated","props","content","filename","includes","CardMedia","style","height","width","component","src","title","controls","useState","setFilename","likes","addLike","postLiked","markPost","useEffect","res","currentLikes","likedBy","username","Card","className","CardHeader","avatar","Avatar","aria-label","action","IconButton","CardActions","onClick","updatedLikes","Likes","JSON","stringify","post","unlikeHandler","likeHandler","CardContent","description","FormWrapper","loggedIn","image","setImage","setDesc","Button","name","formEncType","onChange","e","target","files","required","TextField","label","variant","fullWidth","multiline","rows","value","preventDefault","postData","date","Date","imageData","FormData","append","error","window","location","reload","PostsPageWrapper","text","images","modalIsOpen","setModalState","map","key","_id","color","isOpen","onRequestClose","ariaHideApp","LoginWrapper","isLoading","login","email","password","body","actionTypes_auth","setEmail","setPassword","errorMessage","message","history","push","SignupWrapper","loading","registerUser","setUsername","logout","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","Form","inline","FormControl","placeholder","ProfileWrapper","totalLikes","useParams","userName","setDescription","modal2IsOpen","setModal2State","userPosts","filter","profileData","newUsername","replace","alt","App","this","loadUser","awaitData","prevProps","countTotalLikes","NavComponent","exact","path","PostsPageComponent","LoginComponent","SignupComponent","ProfileComponent","Component","actionTypes_posts","forEach","Number","actionTypes_user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","localStorage","getItem","authReducer","setItem","removeItem","graduated","likedPosts","userReducer","postsReducer","concat","errorReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80b8e1c9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const AWAIT_DATA = \"AWAIT_DATA\";\nexport const DECREMENT = \"DECREMENT\";\nexport const ON_MOUNT = \"ON_MOUNT\";\n\n\nexport const onMount = (posts: string|number) => {\n    return {\n        type: ON_MOUNT,\n        posts: posts,\n    }\n}\n\nexport const fetchPosts = () => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        let posts: any = response.data;\n        return posts;\n        }).then((posts)=> dispatch(onMount(posts))).catch((err: any) => console.log(err));\n    };\n};\n\nexport const awaitData = () => {\n    return {\n        type: AWAIT_DATA,\n    }\n}\n\n","import * as actionTypes from \"../actions/auth_actions\"\n\n//Return Errors\n\nexport const returnErrors = (msg: string, status: any, id: any = null) => {\n    return{\n        type: actionTypes.GET_ERRORS,\n        payload: {msg, status, id}\n    }\n} \n\nexport const clearErrors = () => {\n    return{\n        type: actionTypes.CLEAR_ERRORS,\n    }\n} ","import axios from \"axios\";\nimport {returnErrors} from \"./error_actions\";\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\ninterface registrationData{\n    username?: String,\n    email: String,\n    password: String,\n}\n\n//Register User\nexport const registerUser = ({username,email,password}: registrationData) => (dispatch: any) => {\n    //Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    };\n    //Request body\n    const body = JSON.stringify({username,email,password});\n\n    axios.post(\"http://localhost:5000/users/add\", body, config)\n        .then((res: any) => dispatch({\n            type: REGISTER_SUCCESS,\n            //send user and token data\n            payload: res.data,\n        }))\n        .catch((err: any) => {\n            dispatch(returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\"));\n            dispatch({\n                type: REGISTER_FAIL,\n            })\n        }) \n}\n\n\n\n//Check token & load user on reload\n//call dispatch to make asynchronous requests\nexport const loadUser = () => (dispatch: any, getState: any) => {\n    //User loading\n    dispatch({type: USER_LOADING});\n\n    axios.get(\"http://localhost:5000/auth/user\", tokenConfig(getState)).then((res: any) => {\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })})\n        .catch((err:any) => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}\n\n//Login\nexport const login = ({email,password}: registrationData) => (dispatch: any) => {\n    //Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    };\n    //Request body\n    const body = JSON.stringify({email,password});\n\n    axios.post(\"http://localhost:5000/auth\", body, config)\n        .then((res: any) => dispatch({\n            type: LOGIN_SUCCESS,\n            //send user and token data\n            payload: res.data,\n        }))\n        .catch((err: any) => {\n            dispatch(returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\"));\n            dispatch({\n                type: LOGIN_FAIL,\n            })\n        }) \n}\n\n\n//Logout \n\nexport const logout = () => {\n    return{\n        type: LOGOUT_SUCCESS\n    }\n} \n\n\n\n\n//Setup config/headers and token (authentication process)\nexport const tokenConfig = (getState: any)  => {\n    \n    //Get token from localStorage\n    const token = getState().auth.token;\n\n    //Set Headers\n    const config: any = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    //If token exists, add to headers\n    if(token) {\n        config.headers[\"x-auth-token\"] = token;\n    }\n\n    //return the config\n    return config;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Django Auth\n// import axios from \"axios\";\n\n// export const AUTH_START = \"AUTH_START\";\n// export const AUTH_SUCCESS = \"AUTH_SUCESS\";\n// export const AUTH_FAIL = \"AUTH_FAIL\";\n// export const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n// export const authStart = () => {\n//     return {\n//         type: AUTH_START,\n//     }\n// }\n\n// export const authSuccess = (token: any) => {\n//     return {\n//         type: AUTH_SUCCESS,\n//         token: token,\n//     }\n// }\n\n// export const authFail = (error: any) => {\n//     return {\n//         type: AUTH_FAIL,\n//         error: error,\n//     }\n// }\n\n// //logout function. Removes and resets items in local storage\n// export const logout = () => {\n//     localStorage.removeItem(\"user\");\n//     localStorage.removeItem(\"expirationDate\")\n// }\n\n// //To trigger logout after a certain period of time of inactivity\n// export const checkAuthTimeout = (expirationTime: number) => {\n//     return (dispatch: any) => {\n//         setTimeout(()=> {\n//             dispatch(logout());\n//         }, expirationTime * 1000)\n//     }\n// }\n\n// //Signup for first-timers\n// export const authSignup = (email: string, username: string, password1: string | number, password2: string | number) => {\n//     return (dispatch: any) => {\n//         dispatch(authStart());\n//         //post new user to server\n//         axios.post(\"http://127.0.0.1:8000/rest-auth/registration\", {\n//             email: email,\n//             username: username,\n//             password1: password1,\n//             password2: password2,\n//         })\n//         .then(res => {\n//             //create a token for the new user\n//             const token = res.data.key;\n//             //create a timestamp for when tehy logged in\n//             const newDate = new Date();\n//             const expirationDate: any = new Date(newDate.getTime() + 3600*1000);\n//             //store in local storage so refresh doesnt rest login status\n//             localStorage.setItem(\"token\", token);\n//             localStorage.setItem(\"expirationDate\", expirationDate);\n//             dispatch(authSuccess(token));\n//             dispatch(checkAuthTimeout(3600));\n//         })\n//         .catch(error => {\n//             //handle errors with the authFail function\n//             dispatch(authFail(error))\n//         })\n//     }\n// }\n\n// export const authLogin = (username: string, password: string | number) => {\n//     // \"() => async\" having this infront of (dispatch: any) caused the function to not start　\n//     return (dispatch: any) => {\n//         //authStart makes \"loading\" true\n//         console.log(\"Authentication started\")\n//         dispatch(authStart());\n//         axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n//             username: username,\n//             password: password\n//         })\n//         .then(res => {\n//             const token = res.data.key;\n//             const newDate = new Date();\n//             const expirationDate: any = new Date(newDate.getTime() + 3600*1000);\n//             localStorage.setItem(\"token\", token);\n//             localStorage.setItem(\"expirationDate\", expirationDate);\n//             console.log(token);\n//             dispatch(authSuccess(token));\n//             dispatch(checkAuthTimeout(3600));\n//         })\n//         .catch(error => {\n//             dispatch(authFail(error))\n//         })\n//     }\n// }\n\n// export const authLogout = () => {\n//     return {\n//         type: AUTH_LOGOUT,\n//     }\n// }\n\n// export const authCheckState = () => {\n//     return () => async(dispatch: any) => {\n//         const token = localStorage.getItem(\"token\");\n//         if (token === undefined){\n//             dispatch(logout());\n//         }\n//         else {\n//             const storageDate: any = localStorage.getItem(\"expirationDate\")\n//             const expirationDate: any = new Date(storageDate);\n//             if (expirationDate <= new Date()){\n//                 dispatch(logout());\n//             }\n//             else{\n//                 dispatch(authSuccess(token));\n//                 dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n//             }\n//         }\n//     }\n// }\n\n","import axios from \"axios\";\n\nexport const TOTAL_LIKES = \"TOTAL_LIKES\";\n\nexport const countTotalLikes = (username: string) => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        \n        let posts: any = response.data;\n        console.log(posts);\n     \n        let userPosts = posts.filter((post: any) => {\n            return post.username = username;\n        })\n\n        // console.log(userPosts);\n\n        let totalLikes = 0; \n\n        userPosts.forEach((post: any) => {\n            totalLikes += Number(post.likes);\n            //is post.likes a number\n            return totalLikes\n        })\n        \n        return totalLikes;\n        // console.log(totalLikes);\n\n        }).then((totalLikes)=> {\n            dispatch({\n                type: TOTAL_LIKES,\n                totalLikes: totalLikes,\n            })\n        })\n        // .catch((err:any) => {console.log(err)});\n    };\n}\n","import styled from \"styled-components\";\n\nexport const PostWrapper = styled.div`\n\n    .post_container {\n        display:flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n        align-content: center;\n        width: 605px;\n        height: 1100px;\n        margin-bottom: 40px;\n    }\n\n    h1 {\n        margin: 10px;\n    }\n\n    .username {\n        font-weight: bold;\n    }\n\n    .image {\n        width: 600px;\n        height: 800px;\n    }\n\n    div {\n        margin: 10px;\n    }\n\n    .MuiCardHeader-root {\n        height: 80px;\n        width: 600px;\n    }\n\n    .MuiCardHeader-action{\n    }\n\n    .MuiButtonBase-root{\n        margin: 0px;\n        padding: 0px;\n\n    }  \n\n    .MuiAvatar-img {\n        \n    }  \n\n    .MuiTypography-root {\n        font-weight: bold;\n        font-size: 15px;\n        float: left;\n    }\n\n    .MuiCardActions-root {\n        position: relative;\n        left: -250px;\n        margin: 0px;\n        padding: 0px;\n    }\n\n   .MuiCardContent-root {\n      margin: 20px;\n   }\n\n    .button {\n        display: flex; \n        margin-bottom: 30px;\n    }\n\n    .cardImage{\n        height: 10px;\n    }\n\n   .likes{\n       display: inline-block;\n   }\n\n   .likeNumber{\n       display: inline-block;\n   }\n`;\n\n\n\n","import React, {useState, useEffect} from \"react\";\nimport './PostComponent_style.tsx';\nimport { PostWrapper } from \"./PostComponent_style\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {Card, CardHeader, CardMedia, CardContent, CardActions, IconButton, Avatar} from \"@material-ui/core\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\ninterface Props {\n    id?: string;\n    username?: string;\n    filename?: string;\n    description?: string;\n    likes?: number;\n    imageId?: string;\n\n}\n\n\nexport const PostComponent: React.FC<Props> = (props: any) => {\n\n//Get images\n    let content = null;\n\n    //check file format\n    if (props.filename?.includes(\"jpg\")){\n        content = (\n            <CardMedia \n            style={{ height: \"800px\", width: \"600px\" }}\n            component=\"img\"\n            src={\"http://localhost:5000/posts/images/\" + props.filename} title=\"post content\"/>\n        );\n    }\n    else if (props.filename?.includes(\"jpeg\")){\n        content = (\n            <CardMedia \n            style={{ height: \"800px\", width: \"600px\" }}\n            component=\"img\"\n            src={\"http://localhost:5000/posts/images/\" + props.filename} title=\"post content\"/>\n        );\n    }\n    else if (props.filename?.includes(\"png\")){\n        content = (\n            <CardMedia \n            style={{ height: \"800px\", width: \"600px\" }}\n            component=\"img\"\n            src={\"http://localhost:5000/posts/images/\" + props.filename} title=\"post content\"/>\n        );\n    }\n    else if (props.filename?.includes(\"mov\")){\n        content = (\n            <CardMedia \n            style={{ height: \"800px\", width: \"600px\" }}\n            component=\"video\"\n            src={\"http://localhost:5000/posts/images/\" + props.filename} title=\"post content\" controls/>\n            );\n    };\n\n//Delete posts\n    // const deleteHandler = () => {\n    //     axios.delete(\"http://localhost:5000/posts/delete/\" + props.id).then(()=>{\n    //         console.log(\"image \" + props.id + \" deleted\");\n    //     })\n\n    //     axios.delete(\"http://localhost:5000/posts/image/delete/\" + props.filename);\n\n    //     window.location.reload();\n    // };\n\n    // const [username, setUsername] = useState();\n\n    const [filename, setFilename] = useState();\n\n\n\n    const [likes, addLike] = useState(0);\n    const [postLiked, markPost] = useState(false);\n    \n   \n    useEffect(() => {\n\n        let initialLikes = likes;\n        //Get likes \n        if(initialLikes === 0){\n            axios.get(\"http://localhost:5000/posts/\" + props.id).then((res: any) => {\n                let currentLikes = res.data.likes;\n                addLike(likes + currentLikes);\n\n                //If user has liked before set liked as true.\n                if(res.data.likedBy.includes(props.user.username)){\n                    markPost(true);\n                }\n            })\n        }\n        \n\n        //Get user data\n        const fetchUserData = () => {\n            axios.get(\"http://localhost:5000/users/profile/\" + props.username).then((res: any) => {\n\n                setFilename(res.data.filename);\n\n            })\n        };\n\n        fetchUserData();\n    });\n\n\n\n\n    interface likeData{\n        id: String | undefined,\n        likes: Number\n        likedBy: String [];\n    }\n\n    //Send updated like data to db\n    const likeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: props.id,\n            likes: updatedLikes,\n            likedBy: props.user.username,\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(true);\n\n    };\n\n    //remove or update like data from db\n    const unlikeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: props.id,\n            likes: updatedLikes,\n            likedBy: props.user.username\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(false);\n\n    }\n\n\n\n    return( \n        <PostWrapper>\n             \n            <Card className=\"post_container\" id={props.id} >\n\n                <CardHeader className=\"cardheader\" \n                    avatar={<Avatar aria-label=\"recipe\" className=\"avatar\" src={\"http://localhost:5000/posts/images/\" + filename}> U </Avatar>} \n                    action={<IconButton aria-label=\"settings\"> <MoreVertIcon /></IconButton>}\n                    title={props.username}/>\n                    \n                {/* Image or Video */}\n                {content}\n\n                {/* {props.isAuthenticated ?  */}\n                <CardActions className=\"CardActions\">\n                    {postLiked ? \n                    <div className=\"actionIcons\">\n                    <FavoriteIcon className=\"likes\" onClick={() => {addLike(likes - 1); unlikeHandler(likes - 1);}}/> <div className=\"likeNumber\">: {likes}</div>\n                    </div>\n                    :\n                    <div>\n                    <FavoriteBorderIcon className=\"likes\" onClick={() => {addLike(likes + 1); likeHandler(likes + 1);}}/> <div className=\"likeNumber\">: {likes}</div>\n                    </div>\n                    }               \n                    {/* You use the empty function to not pass the event to the function. instead it`s just a trigger to activate the function */}\n                    {/* <DeleteIcon className=\"button\" onClick={deleteHandler}/> */}\n                </CardActions>\n                {/* : null  }             */}\n\n                <CardContent className=\"CardContent\">{props.description}</CardContent>\n\n            </Card>\n        </PostWrapper>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        posts: state.posts.posts,\n        user: state.auth.user,\n        isAuthenticated: state.auth.token !== null,\n    }\n}\n\nexport default connect(mapStateToProps)(PostComponent);\n\n","import styled from \"styled-components\";\n\nexport const FormWrapper = styled.div`\n\n    .container {\n        display: flex;\n        justify-content: center;\n    }\n\n    .formTitle{\n        margin: 30px;\n        margin-bottom: 70px;\n    }\n\n`;\n\n","import React, {useState} from \"react\"\nimport {connect} from \"react-redux\";\nimport {FormWrapper} from \"./FormComponent_style\"\nimport axios from \"axios\";\nimport { TextField, Button } from '@material-ui/core';\n\n\n\nexport const FormComponent: React.FC = (props: any) => {\n\n    const [filename, setFilename] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [description, setDesc] = useState(\"\");\n\n    //Sennd Form Data\n    const postHandler = (e: any) => {\n        e.preventDefault();\n\n        const postData = {\n            username: props.user.username,\n            filename: filename,\n            description: description,\n            likes: \"\",\n            date: new Date(),\n        }\n\n        //form data can only be called once in one form?\n        const imageData: any = new FormData();\n\n\n        imageData.append(\"image\", image)\n        \n        //Send post information to db\n        axios.post(\"http://localhost:5000/posts/add\", postData).then(response => {\n          console.log(response, \"Post added!\"); \n          }).catch(error => console.log(error))\n        \n        //Upload image to db\n        axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(response => {\n            console.log(imageData);\n            console.log(response, \"Image added!\");\n        }).catch( error => console.log(error))\n        .then(() => window.location.reload())\n      }\n\n    return(\n    \n    <FormWrapper>\n            <form className=\"postForm\" action=\"/upload\">\n\n                <div className=\"container\">\n\n                    <h1 className=\"formTitle\">Post your content!</h1>\n                    \n                    <Button>\n                        <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"input\"\n                        formEncType=\"multipart/form-data\"\n                        onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}\n                        required\n                        />\n                    </Button>    \n                    <br /><br />\n                    <TextField id=\"standared-basic\" label=\"Description\" variant=\"outlined\" fullWidth multiline rows={6}>\n                        <input\n                        type=\"text\"\n                        name=\"description\"\n                        id=\"input\"\n                        value={description}\n                        onChange={(e)=> setDesc(e.target.value)}\n                        required/>\n                    </TextField>\n                    <br/><br/>\n                    \n                    {/* don`t call the function at the spot, because you won`t get the e and it become asynchronous. onClick passes \n                    the click event to postHandler using the reference. Also dont use onSubmit on a button, it`s for a form, \n                    Just use a callback (reference) to refer to the function defined.   */}\n                    <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={postHandler}>Submit</Button>\n                </div>    \n            </form>\n    </FormWrapper>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        user: state.auth.user,\n        loggedIn: state.auth.isAuthenticated,\n    }\n}\n\nexport default connect(mapStateToProps)(FormComponent);\n\n","import styled from \"styled-components\";\n\nexport const PostsPageWrapper = styled.div`\n\n    .formContainer{\n        display: flex;\n        justify-content: center;\n        margin-bottom: 200px;\n    }\n\n    .MuiButtonBase-root{\n        margin-top: 10px;\n        margin-bottom: 200px;\n        padding: 25px;\n    }\n\n`;","import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport PostComponent from \"./PostComponent\";\nimport FormComponent from \"../Forms/FormComponent\";\nimport {PostsPageWrapper} from \"./PostsPageComponent_style\";\nimport {connect} from \"react-redux\";\nimport {Button} from \"@material-ui/core\";\n\nexport const PostsPageComponent = (props: any) => {\n\n    const [modalIsOpen, setModalState] = useState(false);\n\n    return(\n        <PostsPageWrapper>\n            <div>\n                <div className=\"container\">\n                    <h1 className=\"siteTitle\">Music Accelerator</h1>\n                    {props.posts.map((post: any, key: any) => {\n                        return <PostComponent key={post._id} id= {post._id} username={post.username} filename={post.filename} description={post.description} likes={post.likes}/>   \n                    })}      \n                </div>\n\n                {props.isAuthenticated ? \n                <div className=\"formContainer\">\n                    {/* must receive the click event first for a button onClick function */}\n                    <Button variant=\"contained\" color=\"primary\" onClick={(e) => setModalState(true)}> Add Post </Button>\n                    <Modal isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n                        <FormComponent/> \n                    </Modal>\n                </div>\n                : null\n                }\n            </div>\n        </PostsPageWrapper>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        text: state.posts.text,\n        posts: state.posts.posts,\n        data: state.posts.data,\n        image: state.posts.images,\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        isAuthenticated: state.auth.token !== null,\n        user: state.auth.user,\n    };\n  };\n  \n  export default connect(mapStateToProps)(PostsPageComponent);","import styled from \"styled-components\";\n\nexport const LoginWrapper = styled.div`\n\n  .topContainer {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-direction: column;\n      margin-top: 50px;\n  }\n\n  .loginContainer{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin: 40px;\n      height: 400px;\n      width: 600px;\n  }\n\n  .header{\n      display: flex;\n      justify-content: center;\n      margin: 30px;\n  }\n\n .MuiInputBase-input {\n      width 500px;\n  }\n\n  .MuiButtonBase-root{\n      width: 400px;\n      margin: 30px;\n  }\n\n`;\n\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { TextField, Button, Card} from '@material-ui/core';\nimport {LoginWrapper} from \"./LoginComponent_style\";\n\n\n\n\nconst NormalLoginForm = (props: any) => {\n\nconst [email, setEmail] = useState();\nconst [password, setPassword] = useState();\n\n\n//Trigger authentication process with form data\nconst onSubmit = () => {\n    props.login(email, password);\n\n    props.history.push(\"/\");\n  };\n\n//Error message \n  let errorMessage = null;\n  if (props.error){\n      errorMessage = (\n          <p>{props.auth.error.message}</p>\n      )\n    }\n\n  return (\n        <LoginWrapper>\n            <div className=\"topContainer\">\n                <Card className=\"loginContainer\">\n                    {errorMessage}\n                    {/* {\n                    props.isLoading ?  */}\n\n                    <h1 className=\"header\">Login</h1>\n                    <TextField label=\"email\" variant=\"outlined\" required onChange={(e: any) => setEmail(e.target.value)}/>\n                    <TextField label=\"password\" variant=\"outlined\" required onChange={(e: any) => setPassword(e.target.value)}/>\n                \n                    <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={onSubmit}>Login</Button>\n                    {/* } */}\n                </Card>   \n            </div>\n        </LoginWrapper>\n  );\n};\n\n\n\nconst mapStateToProps = (state: any) => {\n    return{\n        isLoading: state.auth.isLoading,\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.auth.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n        login: (email: string, password: string) => dispatch(actionTypes_auth.login({email, password}))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","import styled from \"styled-components\";\n\nexport const SignupWrapper = styled.div`\n\n.topContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 50px;\n}\n\n.signupContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 40px;\n    height: 400px;\n    width: 600px;\n}\n\n.header{\n    display: flex;\n    justify-content: center;\n    margin: 30px;\n}\n\n.MuiInputBase-input {\n    width 500px;\n}\n\n.MuiButtonBase-root{\n    width: 400px;\n    margin: 30px;\n}\n`;\n\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport {TextField, Button, Card} from '@material-ui/core';\nimport {SignupWrapper} from \"./SignupComponent_style\";\n\n\n\n\nconst RegistrationForm = (props: any) => {\n\n\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n\n  //Submit registration data\n  const onSubmit = () => {\n\n    props.registerUser(username, email, password);\n\n    props.history.push(\"/\");\n  };\n\n\n \n  return (\n    <SignupWrapper>\n        <div className=\"topContainer\">\n          <Card className=\"signupContainer\">\n              <h1 className=\"header\">Sign Up</h1>\n              <TextField label=\"username\" variant=\"outlined\" required onChange={(e: any) => setUsername(e.target.value)}/>\n              <TextField label=\"password\" variant=\"outlined\" required onChange={(e: any) => setPassword(e.target.value)}/>\n              <TextField label=\"email\" variant=\"outlined\" required onChange={(e: any) => setEmail(e.target.value)}/>\n          \n              <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={onSubmit}>Login</Button>\n          </Card>\n        </div>\n    </SignupWrapper>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n        loading: state.auth.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n      registerUser: (username:any, email:any, password:any) => dispatch(actionTypes_auth.registerUser({username, email, password}))\n      // onAuth: (username: string, email: string, password1: any, password2: any) => dispatch(actionTypes_auth.authSignup(username, email, password1, password2)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\n","import React from \"react\";\n// , useState, useEffect\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\n\n\nexport const NavComponent: React.FC = (props: any) => {\n\n    return(\n\n \n        <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">MA</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Profile</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                {/* {isAuthenticated ? authLinks : guestLinks} */}\n                {props.isAuthenticated ?\n                <Button id=\"login\" onClick={props.logout} href=\"/login\">Logout</Button>\n                :\n                <Button id=\"login\" href=\"/login\">Login</Button>\n                }\n            </Form>\n            </Navbar.Collapse>\n        </Navbar>\n\n    )\n\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n    return {\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch: any) => {\n    return{\n        logout: () => dispatch(actionTypes_auth.logout()),\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(NavComponent);\n\n\n  //Reason why I couldn`t get the login/logout button to switch was because I was calling the logout() funtion in the button.\n  //This caused the function to be called while render, and every time it rendered, \n  //causing the \"Cannot update a component (`xxx`) while rendering a different component (`xxx`)\"\n  //Basically, what was happening was that while navComponent was rendering it called a function to update App.tsx. \n  //By just referring to the component, a function is not called while rendering and will not update App.","import styled from \"styled-components\";\n\nexport const ProfileWrapper = styled.div`\n\n    .container{\n        display: flex;\n        justify-content: center;\n        background-color: rgb(250,250,250);\n    }\n    \n    .card{\n        margin: 100px;\n        width: 720px;\n        height: auto;\n    }\n\n    .MuiAvatar-root{\n        margin: auto;\n        margin-top: 30px;\n        height: 150px;\n        width: 150px;\n    }\n\n    .MuiButtonBase-root{\n        width: 150px;\n        display: flex;\n        justify-content: center;\n        margin: auto;\n        margin-bottom: 10px;\n    }\n\n    .username{\n        display: flex;\n        justify-content: center;\n        margin-top: 20px;\n        \n    }\n\n    .description{\n        display: flex;\n        justify-content: center;\n        padding: 20px;\n    }\n\n    .likes {\n        display: flex;\n        justify-content: center;\n        margin: 10px;\n    }\n\n    .text{\n        margin: 0px;\n    }\n\n    .posts-container{\n        margin-top: 30px;\n        height: 750px;\n        display: grid;\n        grid-template-columns: 245px 245px 245px;\n        grid-template-rows: 255px 255px 255px;\n    }\n\n    // .posts{\n    //     place-self: center;\n    //     font-size: 50px;\n    //     margin: 5px;\n       \n    // }\n\n    .image{\n        height: 250px;\n        width: 240px;\n        margin: 5px;\n    }\n`;","import React, {useState, useEffect} from \"react\";\nimport Modal from \"react-modal\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\n// import postsReducer from \"../../store/reducers/postsReducer\";\nimport {ProfileWrapper} from \"./ProfileCompoent_style\";\nimport {Avatar, Button} from \"@material-ui/core\";\n\ninterface Props {\n    username?: any;\n    description?: string;\n    posts?: any;\n}\n\n\nexport const ProfileComponent: React.FC<Props> = (props: any) => {\n\n    let {username} = useParams<any>();\n\n    const [userName, setUsername] = useState(username);\n    const [description, setDescription] = useState(\"\");\n    const [modalIsOpen, setModalState] = useState(false);\n    const [modal2IsOpen, setModal2State] = useState(false);\n    const [image, setImage] = useState(null);\n    const [filename, setFilename] = useState(null);\n\n\n\n    //Fetch user profile data\n    useEffect(() => {\n\n        const fetchUserData = () => {\n            axios.get(\"http://localhost:5000/users/profile/\" + username).then((res: any) => {\n                   \n            \n                setUsername(res.data.username);\n                setDescription(res.data.description);\n                setFilename(res.data.filename);\n\n            })\n        };\n\n        fetchUserData();\n        console.log(userName, description, filename);\n\n        //Graduation Function\n        if(props.totalLikes >= 2){\n            setModal2State(true);\n        }\n    }, [props.totalLikes, username,userName, description, filename])\n\n    //Filter Posts\n    const userPosts = props.posts.filter((post: any) => post.username ===  username)\n\n    //Profile Update\n    const profileData = {\n        newUsername: userName,\n        description: description,\n        filename: filename,\n    }\n\n    const imageData: any = new FormData();\n\n    imageData.append(\"image\", image)\n    \n    const setProfile = () => {\n        //Update User Info\n        axios.post(\"http://localhost:5000/users/profile/update/\" + username, profileData).then((err:any) => (console.log(\"profile updated!\")));\n        //Update username of all user posts\n        axios.post(\"http://localhost:5000/posts/update/username/\" + username, profileData).then((err:any) => (console.log(\"user posts updated!\")));;\n\n        axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(res => {\n            console.log(\"profile pic updated!!\");\n        }).catch( error => console.log(error))\n\n        //reload with new username;\n        window.location.replace(\"http://localhost:3000/profile/\" + profileData.newUsername);\n    }\n\n   \n\n    return(\n    \n    <ProfileWrapper>\n        <div className=\"container\">\n\n            <div className=\"card\">\n                {filename ?\n                <Avatar src={\"http://localhost:5000/posts/images/\" + filename}>U</Avatar>\n                :\n                <Avatar>U</Avatar>\n                }         \n                <h2 className=\"username\">{userName}</h2>\n                <div className=\"likes\">{props.totalLikes}</div>\n                <div className=\"description\"> {description}</div>\n                <Button className=\"descButton\" variant=\"contained\" color=\"default\" onClick={(e) => setModalState(true)}>Edit Profile</Button>\n                \n\n                {/* Edit Profile Modal */}\n                <Modal　isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n                    <form className=\"form\">\n                        <label>Profile Image:</label>\n                        <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"input\"\n                        formEncType=\"multipart/form-data\"\n                        onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}\n                        required\n                        /><br /><br />\n\n                        <label>Username:</label>\n                            <input\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"input\"\n                            value={userName}\n                            onChange={(e)=> setUsername(e.target.value)}\n                            required\n                            /><br /><br />\n                        \n                        <label>Description:</label>\n                            <input\n                            type=\"text\"\n                            name=\"description\"\n                            id=\"input\"\n                            value={description}\n                            onChange={(e)=> setDescription(e.target.value)}\n                            required\n                            /><br /><br />\n                        \n                        <Button id=\"submit\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => {setModalState(false); setProfile();}}>Submit</Button>    \n                    </form>\n                </Modal>\n\n                <div className=\"posts-container\">\n                    {userPosts.map((post: any) => {\n\n                        let content = null; \n\n                        if (post.filename?.includes(\"jpg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                         else if (post.filename?.includes(\"jpeg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"png\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"mov\")){\n                                 content = (<video key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} controls></video>);\n                            };    \n    \n                        return content;       \n                    })}\n                </div>\n            </div>\n\n            <Modal isOpen={modal2IsOpen} onRequestClose={() => setModal2State(false)} ariaHideApp={false}>\n                <h1> Congratulations!!!</h1>\n                <div>You have successfully reached # followers and # likes!!</div>\n                <div>Now is the time to solidify your fanbase in other platforms</div>\n            </Modal>\n        </div>\n    </ProfileWrapper>\n\n    );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n    posts: state.posts.posts,\n    user: state.auth.user,\n    totalLikes: state.user.totalLikes,\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);\n\n//problem is that the props loaded rn are the entire posts, although i want to filter only the users posts.","import React, {Component} from \"react\"\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_posts from \"./store/actions/post_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport * as actionTypes_user from \"./store/actions/user_actions\";\nimport PostsPageComponent from \"./Components/Posts/PostsPageCompoenent\";\nimport LoginComponent from \"./Components/Login/LoginComponent\";\nimport SignupComponent from \"./Components/Login/SignupComponent\";\nimport NavComponent from \"./Components/Navbar/NavComponent\";\nimport ProfileComponent from \"./Components/User/ProfileComponent\";\n\n\nclass App extends Component<any> {\n\n\n//use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount(){\n\n    await this.props.loadUser();\n    await this.props.fetchPosts();\n    await this.props.awaitData();\n\n  };\n  \n  async componentDidUpdate(prevProps: any){\n\n    if(await this.props.user !== prevProps.user) {\n      this.props.countTotalLikes(this.props.user.username);\n    };\n  }\n\n  render(){\n      return (\n\n        <div className=\"App\">\n          <BrowserRouter>\n              <Route component={NavComponent}/>\n          {/* Pages */}\n            <Switch>\n              <Route exact={true} path=\"/\" component={PostsPageComponent}/> \n              <Route exact={true} path=\"/login\" component={LoginComponent}/>\n              <Route exact={true} path=\"/signup\" component={SignupComponent}/>\n              <Route exact={true} path=\"/profile/:username\" component={ProfileComponent}/>\n            </Switch>\n          </BrowserRouter>\n        </div> \n      );\n  }\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n  return {\n      text: state.posts.text,\n      posts: state.posts.posts,\n      data: state.posts.data,\n      image: state.posts.images,\n      //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n      isAuthenticated: state.auth.token !== null,\n      user: state.auth.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return{\n      fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n      awaitData: () => dispatch(actionTypes_posts.awaitData()),\n      loadUser: () => dispatch(actionTypes_auth.loadUser()),\n      countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//Current Tasks\n//1. implement the graduation system.\n//2. add postsLiked to user data.  \n//3. Design\n\n\n//Improvement Tasks\n//1. Goal: Make the object id of post and upload.file same. \n//2. Make the like button reflect fast consecutive clicks (post requests)\n\n\n//Design\n//1. Website Title Font\n//2. Post Cards, button placement&design\n//3. Profile Page","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../actions/auth_actions\"\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nconst authReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.USER_LOADING:\n            return{\n              ...state,\n              isLoading: true,\n            };\n\n        case actionTypes.USER_LOADED:\n            return{\n              ...state,\n              isAuthenticated: true,\n              isLoading: false,\n              user: action.payload,\n            };\n\n        case actionTypes.LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return{\n              ...state,\n              //return token and user data\n              ...action.payload,\n              error: action.error,\n              isAuthenticated: true,\n              isLoading: false,\n            };\n\n        case actionTypes.REGISTER_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return{\n              ...state,\n              //sending the entire payload (includes token and user)\n              ...action.payload,\n              isAuthenticated: true,\n              isLoading: false,\n            };\n        \n        case actionTypes.AUTH_ERROR:\n        case actionTypes.LOGIN_FAIL:\n        case actionTypes.LOGOUT_SUCCESS:\n        case actionTypes.REGISTER_FAIL:\n              localStorage.removeItem(\"token\");\n              return{\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n              };\n              default:\n                return state;\n    } \n}\n\n\nexport default authReducer\n","import * as actionTypes from \"../actions/user_actions\";\n\nconst initialState = {\n    username: \"\",\n    description: \"\",\n    totalLikes: 0,\n    graduated: false,\n    userPosts: [],\n    likedPosts: [],\n}\n\nconst userReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.TOTAL_LIKES:\n            return{\n              ...state,\n              totalLikes: action.totalLikes,\n            };   \n    } \n\n    return state;\n}\n\n\nexport default userReducer\n","import * as actionTypes from \"../actions/post_actions\"\n\nconst initialState = {\n    posts: [],\n    //check if data is loaded or not\n    data: false\n};\n\n\nconst postsReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.AWAIT_DATA:\n            return{\n              ...state,\n              data: true\n            };\n\n        case actionTypes.ON_MOUNT:\n            return {\n                //use the ... spread operator to spread and copy the current state\n                ...state,\n                //to update an array, use concat to \n                posts: state.posts.concat(action.posts),\n            };\n            \n    } \n\n    return state;\n}\n\n\nexport default postsReducer\n","import * as actionTypes from \"../actions/auth_actions\"\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null,\n};\n\nconst errorReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.GET_ERRORS:\n            return{\n              msg: action.payload.msg,\n              status: action.payload.status,\n              id: action.payload.id\n            };\n\n        case actionTypes.CLEAR_ERRORS:\n            return{\n                msg: {},\n                status: null,\n                id: null\n            };\n        default:\n            return state;\n    } \n}\n\n\nexport default errorReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware, combineReducers} from \"redux\"\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport authReducer from './store/reducers/authReducer';\nimport userReducer from \"./store/reducers/userReducer\";\nimport postsReducer from './store/reducers/postsReducer';\nimport errorReducer from \"./store/reducers/errorReducer\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  posts: postsReducer,\n  error: errorReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n \nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}