{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Forms/FormComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormWrapper } from \"./FormComponent_style\";\nimport axios from \"axios\";\nimport { TextField, Button } from '@material-ui/core';\nexport const FormComponent = props => {\n  _s();\n\n  const [filename, setFilename] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [description, setDesc] = useState(\"\");\n\n  const postHandler = e => {\n    e.preventDefault();\n    const postData = {\n      username: props.user.username,\n      filename: filename,\n      description: description,\n      likes: \"\",\n      date: new Date()\n    }; //form data can only be called once in one form?\n\n    const imageData = new FormData();\n    imageData.append(\"image\", image);\n    axios.post(\"http://localhost:5000/posts/add\", postData).then(response => {\n      console.log(response, \"Post added!\");\n    }).catch(error => console.log(error));\n    axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(response => {\n      console.log(imageData);\n      console.log(response, \"Image added!\");\n    }).catch(error => console.log(error)).then(() => window.location.reload());\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"postForm\",\n      action: \"/upload\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"formTitle\",\n          children: \"Post your content!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            id: \"input\",\n            formEncType: \"multipart/form-data\",\n            onChange: e => {\n              setImage(e.target.files[0]);\n              setFilename(e.target.files[0].name);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standared-basic\",\n          label: \"Description\",\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 6,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            id: \"input\",\n            value: description,\n            onChange: e => setDesc(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"submit\",\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: postHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormComponent, \"OdxaX/gQ6JGkghl8v59eLEgay2Q=\");\n\n_c = FormComponent;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    loggedIn: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(FormComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Forms/FormComponent.tsx"],"names":["React","useState","connect","FormWrapper","axios","TextField","Button","FormComponent","props","filename","setFilename","image","setImage","description","setDesc","postHandler","e","preventDefault","postData","username","user","likes","date","Date","imageData","FormData","append","post","then","response","console","log","catch","error","window","location","reload","target","files","name","value","mapStateToProps","state","auth","loggedIn","isAuthenticated"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport {connect} from \"react-redux\";\nimport {FormWrapper} from \"./FormComponent_style\"\nimport axios from \"axios\";\nimport { TextField, Button } from '@material-ui/core';\n\n\n\nexport const FormComponent: React.FC = (props: any) => {\n\n    const [filename, setFilename] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [description, setDesc] = useState(\"\");\n\n    const postHandler = (e: any) => {\n        e.preventDefault();\n\n        const postData = {\n            username: props.user.username,\n            filename: filename,\n            description: description,\n            likes: \"\",\n            date: new Date(),\n        }\n\n        //form data can only be called once in one form?\n        const imageData: any = new FormData();\n\n\n        imageData.append(\"image\", image)\n          \n        axios.post(\"http://localhost:5000/posts/add\", postData).then(response => {\n          console.log(response, \"Post added!\"); \n          }).catch(error => console.log(error))\n\n        axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(response => {\n            console.log(imageData);\n            console.log(response, \"Image added!\");\n        }).catch( error => console.log(error))\n        .then(() => window.location.reload())\n      }\n\n    return(\n    \n    <FormWrapper>\n            <form className=\"postForm\" action=\"/upload\">\n\n                <div className=\"container\">\n\n                    <h1 className=\"formTitle\">Post your content!</h1>\n                    \n                    <Button>\n                        <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"input\"\n                        formEncType=\"multipart/form-data\"\n                        onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}\n                        required\n                        />\n                    </Button>    \n                    <br /><br />\n                    <TextField id=\"standared-basic\" label=\"Description\" variant=\"outlined\" fullWidth multiline rows={6}>\n                        <input\n                        type=\"text\"\n                        name=\"description\"\n                        id=\"input\"\n                        value={description}\n                        onChange={(e)=> setDesc(e.target.value)}\n                        required/>\n                    </TextField>\n                    <br/><br/>\n                    \n                    {/* don`t call the function at the spot, because you won`t get the e and it become asynchronous. onClick passes \n                    the click event to postHandler using the reference. Also dont use onSubmit on a button, it`s for a form, \n                    Just use a callback (reference) to refer to the function defined.   */}\n                    <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={postHandler}>Submit</Button>\n                </div>    \n            </form>\n    </FormWrapper>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        user: state.auth.user,\n        loggedIn: state.auth.isAuthenticated,\n    }\n}\n\nexport default connect(mapStateToProps)(FormComponent);\n\n"]},"metadata":{},"sourceType":"module"}