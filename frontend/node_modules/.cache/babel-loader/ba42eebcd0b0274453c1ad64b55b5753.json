{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";// , useState, useEffect\nimport{Navbar,Nav,NavDropdown,Form,FormControl,Button}from'react-bootstrap';import{connect}from\"react-redux\";import*as actionTypes_auth from\"../../store/actions/auth_actions\";export var NavComponent=function NavComponent(props){return/*#__PURE__*/_jsxs(Navbar,{id:\"nav\",bg:\"light\",expand:\"lg\",children:[/*#__PURE__*/_jsx(Navbar.Brand,{href:\"#home\",children:\"MA\"}),/*#__PURE__*/_jsx(Navbar.Toggle,{\"aria-controls\":\"basic-navbar-nav\"}),/*#__PURE__*/_jsxs(Navbar.Collapse,{id:\"basic-navbar-nav\",children:[/*#__PURE__*/_jsxs(Nav,{className:\"mr-auto\",children:[/*#__PURE__*/_jsx(Nav.Link,{href:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Nav.Link,{href:\"#link\",children:\"Profile\"}),/*#__PURE__*/_jsxs(NavDropdown,{title:\"Dropdown\",id:\"basic-nav-dropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.1\",children:\"Action\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.2\",children:\"Another action\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.3\",children:\"Something\"}),/*#__PURE__*/_jsx(NavDropdown.Divider,{}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.4\",children:\"Separated link\"})]})]}),/*#__PURE__*/_jsxs(Form,{inline:true,children:[/*#__PURE__*/_jsx(FormControl,{type:\"text\",placeholder:\"Search\",className:\"mr-sm-2\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",children:\"Search\"}),props.isAuthenticated?/*#__PURE__*/_jsx(Button,{id:\"login\",onClick:props.logout,href:\"/login\",children:\"Logout\"}):/*#__PURE__*/_jsx(Button,{id:\"login\",href:\"/login\",children:\"Login\"})]})]})]});};//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nvar mapStateToProps=function mapStateToProps(state){return{//checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\nisAuthenticated:state.auth.isAuthenticated};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logout:function logout(){return dispatch(actionTypes_auth.logout());}};};export default connect(mapStateToProps,mapDispatchToProps)(NavComponent);//Reason why I couldn`t get the login/logout button to switch was because I was calling the logout() funtion in the button.\n//This caused the function to be called while render, and every time it rendered, \n//causing the \"Cannot update a component (`xxx`) while rendering a different component (`xxx`)\"\n//Basically, what was happening was that while navComponent was rendering it called a function to update App.tsx. \n//By just referring to the component, a function is not called while rendering and will not update App.","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/frontend/src/Components/Navbar/NavComponent.tsx"],"names":["React","Navbar","Nav","NavDropdown","Form","FormControl","Button","connect","actionTypes_auth","NavComponent","props","isAuthenticated","logout","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAAQC,MAAR,CAAgBC,GAAhB,CAAqBC,WAArB,CAAkCC,IAAlC,CAAwCC,WAAxC,CAAqDC,MAArD,KAAkE,iBAAlE,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,gBAAZ,KAAkC,kCAAlC,CAGA,MAAO,IAAMC,CAAAA,YAAsB,CAAG,QAAzBA,CAAAA,YAAyB,CAACC,KAAD,CAAgB,CAElD,mBAGI,MAAC,MAAD,EAAQ,EAAE,CAAC,KAAX,CAAiB,EAAE,CAAC,OAApB,CAA4B,MAAM,CAAC,IAAnC,wBACI,KAAC,MAAD,CAAQ,KAAR,EAAc,IAAI,CAAC,OAAnB,gBADJ,cAEI,KAAC,MAAD,CAAQ,MAAR,EAAe,gBAAc,kBAA7B,EAFJ,cAGI,MAAC,MAAD,CAAQ,QAAR,EAAiB,EAAE,CAAC,kBAApB,wBACI,MAAC,GAAD,EAAK,SAAS,CAAC,SAAf,wBACI,KAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,GAAf,kBADJ,cAEI,KAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,OAAf,qBAFJ,cAGI,MAAC,WAAD,EAAa,KAAK,CAAC,UAAnB,CAA8B,EAAE,CAAC,oBAAjC,wBACI,KAAC,WAAD,CAAa,IAAb,EAAkB,IAAI,CAAC,aAAvB,oBADJ,cAEI,KAAC,WAAD,CAAa,IAAb,EAAkB,IAAI,CAAC,aAAvB,4BAFJ,cAGI,KAAC,WAAD,CAAa,IAAb,EAAkB,IAAI,CAAC,aAAvB,uBAHJ,cAII,KAAC,WAAD,CAAa,OAAb,IAJJ,cAKI,KAAC,WAAD,CAAa,IAAb,EAAkB,IAAI,CAAC,aAAvB,4BALJ,GAHJ,GADJ,cAYA,MAAC,IAAD,EAAM,MAAM,KAAZ,wBACI,KAAC,WAAD,EAAa,IAAI,CAAC,MAAlB,CAAyB,WAAW,CAAC,QAArC,CAA8C,SAAS,CAAC,SAAxD,EADJ,cAEI,KAAC,MAAD,EAAQ,OAAO,CAAC,iBAAhB,oBAFJ,CAIKA,KAAK,CAACC,eAAN,cACD,KAAC,MAAD,EAAQ,EAAE,CAAC,OAAX,CAAmB,OAAO,CAAED,KAAK,CAACE,MAAlC,CAA0C,IAAI,CAAC,QAA/C,oBADC,cAGD,KAAC,MAAD,EAAQ,EAAE,CAAC,OAAX,CAAmB,IAAI,CAAC,QAAxB,mBAPJ,GAZA,GAHJ,GAHJ,CAiCH,CAnCM,CAqCP;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACpC,MAAO,CACH;AACAH,eAAe,CAAEG,KAAK,CAACC,IAAN,CAAWJ,eAFzB,CAAP,CAID,CALH,CAOE,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAmB,CAC5C,MAAM,CACFL,MAAM,CAAE,wBAAMK,CAAAA,QAAQ,CAACT,gBAAgB,CAACI,MAAjB,EAAD,CAAd,EADN,CAAN,CAGD,CAJD,CAMA,cAAeL,CAAAA,OAAO,CAACM,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CP,YAA7C,CAAf,CAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n// , useState, useEffect\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\n\n\nexport const NavComponent: React.FC = (props: any) => {\n\n    return(\n\n \n        <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">MA</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Profile</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                {/* {isAuthenticated ? authLinks : guestLinks} */}\n                {props.isAuthenticated ?\n                <Button id=\"login\" onClick={props.logout} href=\"/login\">Logout</Button>\n                :\n                <Button id=\"login\" href=\"/login\">Login</Button>\n                }\n            </Form>\n            </Navbar.Collapse>\n        </Navbar>\n\n    )\n\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n    return {\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch: any) => {\n    return{\n        logout: () => dispatch(actionTypes_auth.logout()),\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(NavComponent);\n\n\n  //Reason why I couldn`t get the login/logout button to switch was because I was calling the logout() funtion in the button.\n  //This caused the function to be called while render, and every time it rendered, \n  //causing the \"Cannot update a component (`xxx`) while rendering a different component (`xxx`)\"\n  //Basically, what was happening was that while navComponent was rendering it called a function to update App.tsx. \n  //By just referring to the component, a function is not called while rendering and will not update App."]},"metadata":{},"sourceType":"module"}