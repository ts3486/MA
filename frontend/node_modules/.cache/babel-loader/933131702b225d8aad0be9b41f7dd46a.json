{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import*as actionTypes_auth from\"../../store/actions/auth_actions\";import{TextField,Button,Card}from'@material-ui/core';import{LoginWrapper}from\"./LoginComponent_style\";var NormalLoginForm=function NormalLoginForm(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];//Trigger authentication process with form data\nvar onSubmit=function onSubmit(){props.login(email,password);props.history.push(\"/\");};//Error message \nvar errorMessage=null;if(props.error){errorMessage=/*#__PURE__*/_jsx(\"p\",{children:props.auth.error.message});}return/*#__PURE__*/_jsx(LoginWrapper,{children:/*#__PURE__*/_jsx(\"div\",{className:\"topContainer\",children:/*#__PURE__*/_jsxs(Card,{className:\"loginContainer\",children:[errorMessage,/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Login\"}),/*#__PURE__*/_jsx(TextField,{label:\"email\",variant:\"outlined\",required:true,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{label:\"password\",variant:\"outlined\",required:true,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(Button,{id:\"submit\",type:\"submit\",variant:\"contained\",onClick:onSubmit,children:\"Login\"})]})})});};var mapStateToProps=function mapStateToProps(state){return{isLoading:state.auth.isLoading,isAuthenticated:state.auth.isAuthenticated,error:state.auth.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{login:function login(email,password){return dispatch(actionTypes_auth.login({email:email,password:password}));}};};export default connect(mapStateToProps,mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/frontend/src/Components/Login/LoginComponent.tsx"],"names":["React","useState","connect","actionTypes_auth","TextField","Button","Card","LoginWrapper","NormalLoginForm","props","email","setEmail","password","setPassword","onSubmit","login","history","push","errorMessage","error","auth","message","e","target","value","mapStateToProps","state","isLoading","isAuthenticated","mapDispatchToProps","dispatch"],"mappings":"sPAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,gBAAZ,KAAkC,kCAAlC,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,IAA5B,KAAuC,mBAAvC,CACA,OAAQC,YAAR,KAA2B,wBAA3B,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,eAEdR,QAAQ,EAFM,wCAEjCS,KAFiC,eAE1BC,QAF0B,8BAGRV,QAAQ,EAHA,yCAGjCW,QAHiC,eAGvBC,WAHuB,eAMxC;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBL,KAAK,CAACM,KAAN,CAAYL,KAAZ,CAAmBE,QAAnB,EAEAH,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACD,CAJH,CAMA;AACE,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAIT,KAAK,CAACU,KAAV,CAAgB,CACZD,YAAY,cACR,mBAAIT,KAAK,CAACW,IAAN,CAAWD,KAAX,CAAiBE,OAArB,EADJ,CAGD,CAEH,mBACM,KAAC,YAAD,wBACI,YAAK,SAAS,CAAC,cAAf,uBACI,MAAC,IAAD,EAAM,SAAS,CAAC,gBAAhB,WACKH,YADL,cAKI,WAAI,SAAS,CAAC,QAAd,mBALJ,cAMI,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,CAAyB,OAAO,CAAC,UAAjC,CAA4C,QAAQ,KAApD,CAAqD,QAAQ,CAAE,kBAACI,CAAD,QAAYX,CAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAA/D,EANJ,cAOI,KAAC,SAAD,EAAW,KAAK,CAAC,UAAjB,CAA4B,OAAO,CAAC,UAApC,CAA+C,QAAQ,KAAvD,CAAwD,QAAQ,CAAE,kBAACF,CAAD,QAAYT,CAAAA,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAAlE,EAPJ,cASI,KAAC,MAAD,EAAQ,EAAE,CAAC,QAAX,CAAoB,IAAI,CAAC,QAAzB,CAAkC,OAAO,CAAC,WAA1C,CAAsD,OAAO,CAAEV,QAA/D,mBATJ,GADJ,EADJ,EADN,CAkBD,CAvCD,CA2CA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACpC,MAAM,CACFC,SAAS,CAAED,KAAK,CAACN,IAAN,CAAWO,SADpB,CAEFC,eAAe,CAAEF,KAAK,CAACN,IAAN,CAAWQ,eAF1B,CAGFT,KAAK,CAAEO,KAAK,CAACN,IAAN,CAAWD,KAHhB,CAAN,CAKH,CAND,CAQA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAmB,CAC1C,MAAM,CACFf,KAAK,CAAE,eAACL,KAAD,CAAgBE,QAAhB,QAAqCkB,CAAAA,QAAQ,CAAC3B,gBAAgB,CAACY,KAAjB,CAAuB,CAACL,KAAK,CAALA,KAAD,CAAQE,QAAQ,CAARA,QAAR,CAAvB,CAAD,CAA7C,EADL,CAAN,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACuB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CrB,eAA7C,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { TextField, Button, Card} from '@material-ui/core';\nimport {LoginWrapper} from \"./LoginComponent_style\";\n\n\n\n\nconst NormalLoginForm = (props: any) => {\n\nconst [email, setEmail] = useState();\nconst [password, setPassword] = useState();\n\n\n//Trigger authentication process with form data\nconst onSubmit = () => {\n    props.login(email, password);\n\n    props.history.push(\"/\");\n  };\n\n//Error message \n  let errorMessage = null;\n  if (props.error){\n      errorMessage = (\n          <p>{props.auth.error.message}</p>\n      )\n    }\n\n  return (\n        <LoginWrapper>\n            <div className=\"topContainer\">\n                <Card className=\"loginContainer\">\n                    {errorMessage}\n                    {/* {\n                    props.isLoading ?  */}\n\n                    <h1 className=\"header\">Login</h1>\n                    <TextField label=\"email\" variant=\"outlined\" required onChange={(e: any) => setEmail(e.target.value)}/>\n                    <TextField label=\"password\" variant=\"outlined\" required onChange={(e: any) => setPassword(e.target.value)}/>\n                \n                    <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={onSubmit}>Login</Button>\n                    {/* } */}\n                </Card>   \n            </div>\n        </LoginWrapper>\n  );\n};\n\n\n\nconst mapStateToProps = (state: any) => {\n    return{\n        isLoading: state.auth.isLoading,\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.auth.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n        login: (email: string, password: string) => dispatch(actionTypes_auth.login({email, password}))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}