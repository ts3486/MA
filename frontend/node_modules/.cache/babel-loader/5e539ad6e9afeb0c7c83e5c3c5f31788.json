{"ast":null,"code":"import _objectSpread from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from\"../actions/post_actions\";var initialState={posts:[],//check if data is loaded or not\ndata:false};var postsReducer=function postsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.AWAIT_DATA:return _objectSpread(_objectSpread({},state),{},{data:true});case actionTypes.ON_MOUNT:return _objectSpread(_objectSpread({},state),{},{//to update an array, use concat to \nposts:state.posts.concat(action.posts)});}return state;};export default postsReducer;","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/frontend/src/store/reducers/postsReducer.tsx"],"names":["actionTypes","initialState","posts","data","postsReducer","state","action","type","AWAIT_DATA","ON_MOUNT","concat"],"mappings":"6JAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,yBAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjB;AACAC,IAAI,CAAE,KAHW,CAArB,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA4C,IAA3CC,CAAAA,KAA2C,2DAA9BJ,YAA8B,IAAhBK,CAAAA,MAAgB,2CAG7D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKP,CAAAA,WAAW,CAACQ,UAAjB,CACI,sCACKH,KADL,MAEEF,IAAI,CAAE,IAFR,GAKJ,IAAKH,CAAAA,WAAW,CAACS,QAAjB,CACI,sCAEOJ,KAFP,MAGI;AACAH,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmBJ,MAAM,CAACJ,KAA1B,CAJX,GARR,CAiBA,MAAOG,CAAAA,KAAP,CACH,CArBD,CAwBA,cAAeD,CAAAA,YAAf","sourcesContent":["import * as actionTypes from \"../actions/post_actions\"\n\nconst initialState = {\n    posts: [],\n    //check if data is loaded or not\n    data: false\n};\n\n\nconst postsReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.AWAIT_DATA:\n            return{\n              ...state,\n              data: true\n            };\n\n        case actionTypes.ON_MOUNT:\n            return {\n                //use the ... spread operator to spread and copy the current state\n                ...state,\n                //to update an array, use concat to \n                posts: state.posts.concat(action.posts),\n            };\n            \n    } \n\n    return state;\n}\n\n\nexport default postsReducer\n"]},"metadata":{},"sourceType":"module"}