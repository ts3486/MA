{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './PostComponent_style.tsx';\nimport { PostWrapper } from \"./PostComponent_style\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { connect } from \"react-redux\"; // import { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader'; // import { CardActions } from \"@material-ui/core\";\n\nimport CardMedia from '@material-ui/core/CardMedia'; // import CardContent from '@material-ui/core/CardContent';\n// import CardActions from '@material-ui/core/CardActions';\n// import Collapse from '@material-ui/core/Collapse';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton'; // import Typography from '@material-ui/core/Typography';\n// import { red } from '@material-ui/core/colors';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nexport const PostComponent = Props => {\n  _s();\n\n  //Get images\n  // let content = null;\n  // if (Props.filename?.includes(\"jpg\")){\n  //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n  // }\n  // else if (Props.filename?.includes(\"jpeg\")){\n  //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n  // }\n  // else if (Props.filename?.includes(\"png\")){\n  //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n  // }\n  // else if (Props.filename?.includes(\"mov\")){\n  //     content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} controls></video>);\n  // };\n  //Delete posts\n  const deleteHandler = () => {\n    axios.delete(\"http://localhost:5000/posts/delete/\" + Props.id).then(() => {\n      console.log(\"image \" + Props.id + \" deleted\");\n    });\n    axios.delete(\"http://localhost:5000/posts/image/delete/\" + Props.filename);\n    window.location.reload();\n  }; //Add Likes\n\n\n  const [likes, addLike] = useState(0);\n  const [postLiked, markPost] = useState(false);\n  useEffect(() => {\n    let initialLikes = likes; //load the likes of the post\n\n    if (initialLikes === 0) {\n      axios.get(\"http://localhost:5000/posts/\" + Props.id).then(res => {\n        let currentLikes = res.data.likes;\n        addLike(likes + currentLikes);\n      });\n    } //check if user has liked this post before\n\n\n    axios.get(\"http://localhost:5000/post/\" + Props.id).then(res => {});\n  });\n\n  const likeHandler = updatedLikes => {\n    const Likes = {\n      id: Props.id,\n      likes: updatedLikes\n    };\n    JSON.stringify(Likes);\n    axios.post(\"http://localhost:5000/posts/like\", Likes).then(() => {\n      console.log(\"like added\");\n    });\n    markPost(true);\n  };\n\n  const unlikeHandler = updatedLikes => {\n    const Likes = {\n      id: Props.id,\n      likes: updatedLikes\n    };\n    JSON.stringify(Likes);\n    axios.post(\"http://localhost:5000/posts/like\", Likes).then(() => {\n      console.log(\"like added\");\n    });\n    markPost(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"post_container\",\n      id: Props.id,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"username\",\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          \"aria-label\": \"recipe\",\n          className: \"avatar\",\n          children: \" R \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 64\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this),\n        title: Props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        src: \"http://localhost:5000/posts/images/\" + Props.filename,\n        title: \"post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: Props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), postLiked ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes\",\n        onClick: () => {\n          addLike(likes - 1);\n          unlikeHandler(likes - 1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 107\n        }, this), \" : \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes\",\n        onClick: () => {\n          addLike(likes + 1);\n          likeHandler(likes + 1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: farHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 105\n        }, this), \" : \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: deleteHandler,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostComponent, \"jDsGzHiRe8sDoz/XJx7sWKOKW4o=\");\n\n_c = PostComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts\n  };\n};\n\nexport default connect(mapStateToProps)(PostComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostComponent.tsx"],"names":["React","useState","useEffect","PostWrapper","axios","FontAwesomeIcon","faHeart","farHeart","connect","Card","CardHeader","CardMedia","Avatar","IconButton","MoreVertIcon","PostComponent","Props","deleteHandler","delete","id","then","console","log","filename","window","location","reload","likes","addLike","postLiked","markPost","initialLikes","get","res","currentLikes","data","likeHandler","updatedLikes","Likes","JSON","stringify","post","unlikeHandler","username","description","mapStateToProps","state","posts"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './PostComponent_style.tsx';\nimport { PostWrapper } from \"./PostComponent_style\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart} from '@fortawesome/free-regular-svg-icons'\nimport {connect} from \"react-redux\";\n// import { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import { CardActions } from \"@material-ui/core\";\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardActions from '@material-ui/core/CardActions';\n// import Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\n// import Typography from '@material-ui/core/Typography';\n// import { red } from '@material-ui/core/colors';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\ninterface Props {\n    id?: string;\n    username?: string;\n    filename?: string;\n    description?: string;\n    likes?: number;\n    imageId?: string;\n}\n\n\nexport const PostComponent: React.FC<Props> = (Props) => {\n\n//Get images\n    // let content = null;\n\n    // if (Props.filename?.includes(\"jpg\")){\n    //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    // }\n    // else if (Props.filename?.includes(\"jpeg\")){\n    //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    // }\n    // else if (Props.filename?.includes(\"png\")){\n    //     content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} alt=\"is it here\"></img>);\n    // }\n    // else if (Props.filename?.includes(\"mov\")){\n    //     content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + Props.filename} controls></video>);\n    // };\n\n//Delete posts\n    const deleteHandler = () => {\n        axios.delete(\"http://localhost:5000/posts/delete/\" + Props.id).then(()=>{\n            console.log(\"image \" + Props.id + \" deleted\");\n        })\n\n        axios.delete(\"http://localhost:5000/posts/image/delete/\" + Props.filename);\n\n        window.location.reload();\n    };\n\n//Add Likes\n\n    const [likes, addLike] = useState(0);\n    const [postLiked, markPost] = useState(false);\n   \n    useEffect(() => {\n\n        let initialLikes = likes;\n        //load the likes of the post\n        if(initialLikes === 0){\n            axios.get(\"http://localhost:5000/posts/\" + Props.id).then((res: any) => {\n                let currentLikes = res.data.likes;\n                addLike(likes + currentLikes);\n            })\n        }\n        //check if user has liked this post before\n        axios.get(\"http://localhost:5000/post/\" + Props.id).then((res: any) => {\n        })\n    });\n\n\n\n\n    interface likeData{\n        id: String | undefined,\n        likes: Number\n    }\n\n    const likeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: Props.id,\n            likes: updatedLikes,\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(true);\n\n    };\n\n    const unlikeHandler = (updatedLikes: number) => {\n\n        const Likes: likeData = {\n            id: Props.id,\n            likes: updatedLikes,\n        }\n\n        JSON.stringify(Likes);\n\n        axios.post(\"http://localhost:5000/posts/like\", Likes)\n        .then(()=>{console.log(\"like added\")})\n\n        markPost(false);\n\n    }\n\n\n\n    return( \n        <PostWrapper>\n             \n            <Card className=\"post_container\" id={Props.id} >\n                <CardHeader className=\"username\" \n                    avatar={<Avatar aria-label=\"recipe\" className=\"avatar\"> R </Avatar>} \n                    action={<IconButton aria-label=\"settings\"> <MoreVertIcon /> </IconButton>}\n                    title={Props.username}/>\n\n                <CardMedia src={\"http://localhost:5000/posts/images/\" + Props.filename} title=\"post content\"/>\n    \n                {/* Image or Video */}\n                {/* {content} */}\n                \n                {/* Description */}\n                <div className=\"description\">{Props.description}</div>\n                \n                {/* Like Button */}\n                {postLiked ? \n                <button className=\"likes\" onClick={() => {addLike(likes - 1); unlikeHandler(likes - 1);}}><FontAwesomeIcon icon={faHeart}/> : {likes}</button>\n                :\n                <button className=\"likes\" onClick={() => {addLike(likes + 1); likeHandler(likes + 1);}}><FontAwesomeIcon icon= {farHeart}/> : {likes}</button>\n                }               \n                {/* You use the empty function to not pass the event to the function. instead it`s just a trigger to activate the function */}\n                <button className=\"button\" onClick={deleteHandler}>X</button>\n            </Card>\n        </PostWrapper>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n        posts: state.posts.posts,\n    }\n}\n\nexport default connect(mapStateToProps)(PostComponent);\n\n"]},"metadata":{},"sourceType":"module"}