{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Tao.S/Desktop/WebDev/MA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import'./App.css';import{BrowserRouter,Switch,Route}from'react-router-dom';import{connect}from\"react-redux\";import*as actionTypes_posts from\"./store/actions/post_actions\";import*as actionTypes_auth from\"./store/actions/auth_actions\";import*as actionTypes_user from\"./store/actions/user_actions\";import PostsPageComponent from\"./Components/Posts/PostsPageCompoenent\";import LoginComponent from\"./Components/Login/LoginComponent\";import SignupComponent from\"./Components/Login/SignupComponent\";import NavComponent from\"./Components/Navbar/NavComponent\";import ProfileComponent from\"./Components/User/ProfileComponent\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"componentDidMount\",//use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\nvalue:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.props.loadUser();case 2:_context.next=4;return this.props.fetchPosts();case 4:_context.next=6;return this.props.awaitData();case 6:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentDidUpdate\",value:function(){var _componentDidUpdate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(prevProps){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.props.user;case 2:_context2.t0=_context2.sent;_context2.t1=prevProps.user;if(!(_context2.t0!==_context2.t1)){_context2.next=6;break;}this.props.countTotalLikes(this.props.user.username);case 6:;case 7:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidUpdate(_x){return _componentDidUpdate.apply(this,arguments);}return componentDidUpdate;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Route,{component:NavComponent}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:PostsPageComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:LoginComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",component:SignupComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile/:username\",component:ProfileComponent})]})]})});}}]);return App;}(Component);//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nvar mapStateToProps=function mapStateToProps(state){return{text:state.posts.text,posts:state.posts.posts,data:state.posts.data,image:state.posts.images,//checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\nisAuthenticated:state.auth.token!==null,user:state.auth.user};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchPosts:function fetchPosts(){return dispatch(actionTypes_posts.fetchPosts());},awaitData:function awaitData(){return dispatch(actionTypes_posts.awaitData());},loadUser:function loadUser(){return dispatch(actionTypes_auth.loadUser());},countTotalLikes:function countTotalLikes(username){return dispatch(actionTypes_user.countTotalLikes(username));}};};export default connect(mapStateToProps,mapDispatchToProps)(App);//Current Tasks\n//1. implement the graduation system.\n//2. add postsLiked to user data.  \n//3. Design\n//Improvement Tasks\n//1. Goal: Make the object id of post and upload.file same. \n//2. Make the like button reflect fast consecutive clicks (post requests)\n//Design\n//1. Website Title Font\n//2. Post Cards, button placement&design\n//3. Profile Page","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/frontend/src/App.tsx"],"names":["React","Component","BrowserRouter","Switch","Route","connect","actionTypes_posts","actionTypes_auth","actionTypes_user","PostsPageComponent","LoginComponent","SignupComponent","NavComponent","ProfileComponent","App","props","loadUser","fetchPosts","awaitData","prevProps","user","countTotalLikes","username","mapStateToProps","state","text","posts","data","image","images","isAuthenticated","auth","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_posts from \"./store/actions/post_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport * as actionTypes_user from \"./store/actions/user_actions\";\nimport PostsPageComponent from \"./Components/Posts/PostsPageCompoenent\";\nimport LoginComponent from \"./Components/Login/LoginComponent\";\nimport SignupComponent from \"./Components/Login/SignupComponent\";\nimport NavComponent from \"./Components/Navbar/NavComponent\";\nimport ProfileComponent from \"./Components/User/ProfileComponent\";\n\n\nclass App extends Component<any> {\n\n\n//use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount(){\n\n    await this.props.loadUser();\n    await this.props.fetchPosts();\n    await this.props.awaitData();\n\n  };\n  \n  async componentDidUpdate(prevProps: any){\n\n    if(await this.props.user !== prevProps.user) {\n      this.props.countTotalLikes(this.props.user.username);\n    };\n  }\n\n  render(){\n      return (\n\n        <div className=\"App\">\n          <BrowserRouter>\n              <Route component={NavComponent}/>\n          {/* Pages */}\n            <Switch>\n              <Route exact={true} path=\"/\" component={PostsPageComponent}/> \n              <Route exact={true} path=\"/login\" component={LoginComponent}/>\n              <Route exact={true} path=\"/signup\" component={SignupComponent}/>\n              <Route exact={true} path=\"/profile/:username\" component={ProfileComponent}/>\n            </Switch>\n          </BrowserRouter>\n        </div> \n      );\n  }\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n  return {\n      text: state.posts.text,\n      posts: state.posts.posts,\n      data: state.posts.data,\n      image: state.posts.images,\n      //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n      isAuthenticated: state.auth.token !== null,\n      user: state.auth.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return{\n      fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n      awaitData: () => dispatch(actionTypes_posts.awaitData()),\n      loadUser: () => dispatch(actionTypes_auth.loadUser()),\n      countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//Current Tasks\n//1. implement the graduation system.\n//2. add postsLiked to user data.  \n//3. Design\n\n\n//Improvement Tasks\n//1. Goal: Make the object id of post and upload.file same. \n//2. Make the like button reflect fast consecutive clicks (post requests)\n\n\n//Design\n//1. Website Title Font\n//2. Post Cards, button placement&design\n//3. Profile Page"]},"metadata":{},"sourceType":"module"}