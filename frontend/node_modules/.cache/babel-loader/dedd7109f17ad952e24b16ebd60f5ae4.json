{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostsPageCompoenent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport PostComponent from \"./PostComponent\";\nimport FormComponent from \"../Forms/FormComponent\";\nimport { connect } from \"react-redux\";\nexport const PostsPageComponent = props => {\n  _s();\n\n  const [modalIsOpen, setModalState] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Music Accelerator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), props.posts.map((post, key) => {\n        return /*#__PURE__*/_jsxDEV(PostComponent, {\n          id: post._id,\n          username: post.username,\n          filename: post.filename,\n          description: post.description,\n          likes: post.likes\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalState(false),\n      ariaHideApp: false,\n      children: /*#__PURE__*/_jsxDEV(FormComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsPageComponent, \"tJM5+iGfEA1ugVcQXiyKzSJpUuo=\");\n\n_c = PostsPageComponent;\n\nconst mapStateToProps = state => {\n  return {\n    text: state.posts.text,\n    posts: state.posts.posts,\n    data: state.posts.data,\n    image: state.posts.images,\n    //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n    isAuthenticated: state.auth.token !== null,\n    user: state.auth.user\n  };\n}; //   const mapDispatchToProps = (dispatch: any) => {\n//     return{\n//         fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n//         awaitData: () => dispatch(actionTypes_posts.awaitData()),\n//         loadUser: () => dispatch(actionTypes_auth.loadUser()),\n//         countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n//     }\n//   }\n\n\nexport default connect(mapStateToProps)(PostsPageComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsPageComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Posts/PostsPageCompoenent.tsx"],"names":["React","useState","Modal","PostComponent","FormComponent","connect","PostsPageComponent","props","modalIsOpen","setModalState","posts","map","post","key","_id","username","filename","description","likes","isAuthenticated","mapStateToProps","state","text","data","image","images","auth","token","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAgB;AAAA;;AAE9C,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BR,QAAQ,CAAC,KAAD,CAA7C;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKM,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAYC,GAAZ,KAAyB;AACtC,4BAAO,QAAC,aAAD;AAA8B,UAAA,EAAE,EAAGD,IAAI,CAACE,GAAxC;AAA6C,UAAA,QAAQ,EAAEF,IAAI,CAACG,QAA5D;AAAsE,UAAA,QAAQ,EAAEH,IAAI,CAACI,QAArF;AAA+F,UAAA,WAAW,EAAEJ,IAAI,CAACK,WAAjH;AAA8H,UAAA,KAAK,EAAEL,IAAI,CAACM;AAA1I,WAAoBN,IAAI,CAACE,GAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKP,KAAK,CAACY,eAAN,gBACD,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEX,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,aAAa,CAAC,KAAD,CAA/D;AAAwE,MAAA,WAAW,EAAE,KAArF;AAAA,6BACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADC,GAIC,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtBM;;GAAMH,kB;;KAAAA,kB;;AAwBb,MAAMc,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACX,KAAN,CAAYY,IADf;AAEHZ,IAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYA,KAFhB;AAGHa,IAAAA,IAAI,EAAEF,KAAK,CAACX,KAAN,CAAYa,IAHf;AAIHC,IAAAA,KAAK,EAAEH,KAAK,CAACX,KAAN,CAAYe,MAJhB;AAKH;AACAN,IAAAA,eAAe,EAAEE,KAAK,CAACK,IAAN,CAAWC,KAAX,KAAqB,IANnC;AAOHC,IAAAA,IAAI,EAAEP,KAAK,CAACK,IAAN,CAAWE;AAPd,GAAP;AASD,CAVH,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,eAAevB,OAAO,CAACe,eAAD,CAAP,CAAyBd,kBAAzB,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport PostComponent from \"./PostComponent\";\nimport FormComponent from \"../Forms/FormComponent\";\nimport {connect} from \"react-redux\";\n\nexport const PostsPageComponent = (props: any) => {\n\n    const [modalIsOpen, setModalState] = useState(false);\n\n    return(\n        <div>\n            <div className=\"container\">\n                <h1>Music Accelerator</h1>\n                {props.posts.map((post: any, key: any) => {\n                    return <PostComponent key={post._id} id= {post._id} username={post.username} filename={post.filename} description={post.description} likes={post.likes}/>   \n                })}      \n            </div>\n\n            {props.isAuthenticated ? \n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n            <FormComponent/> \n            </Modal>\n            : null\n            }\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        text: state.posts.text,\n        posts: state.posts.posts,\n        data: state.posts.data,\n        image: state.posts.images,\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        isAuthenticated: state.auth.token !== null,\n        user: state.auth.user,\n    };\n  };\n  \n//   const mapDispatchToProps = (dispatch: any) => {\n//     return{\n//         fetchPosts: () => dispatch(actionTypes_posts.fetchPosts()),\n//         awaitData: () => dispatch(actionTypes_posts.awaitData()),\n//         loadUser: () => dispatch(actionTypes_auth.loadUser()),\n//         countTotalLikes: (username: string) => dispatch(actionTypes_user.countTotalLikes(username)),\n//     }\n//   }\n  \n  export default connect(mapStateToProps)(PostsPageComponent);"]},"metadata":{},"sourceType":"module"}