{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Navbar/navComponent.tsx\";\nimport React, { Fragment } from \"react\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nexport const NavComponent = props => {\n  const {\n    isAuthenticated\n  } = props.auth;\n\n  const authLinks = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      id: \"login\",\n      onClick: props.logout(),\n      href: \"/login\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n\n  const guestLinks = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      id: \"login\",\n      href: \"/login2\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    id: \"nav\",\n    bg: \"light\",\n    expand: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n      href: \"#home\",\n      children: \"React-Bootstrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#link\",\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: \"Dropdown\",\n          id: \"basic-nav-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.1\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.2\",\n            children: \"Another action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.3\",\n            children: \"Something\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.4\",\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        inline: true,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"mr-sm-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), isAuthenticated ? authLinks : guestLinks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}; //directs how the state managed by redux will be mapped to state here. Makes data from store available to component\n\n_c = NavComponent;\n\nconst mapStateToProps = state => {\n  return {\n    //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actionTypes_auth.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"NavComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Navbar/navComponent.tsx"],"names":["React","Fragment","Navbar","Nav","NavDropdown","Form","FormControl","Button","connect","actionTypes_auth","NavComponent","props","isAuthenticated","auth","authLinks","logout","guestLinks","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from \"react\";\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\n\n\nexport const NavComponent: React.FC = (props: any) => {\n\n    const {isAuthenticated} = props.auth;\n\n    const authLinks = (\n        <Fragment>\n            <Button id=\"login\" onClick={props.logout()} href=\"/login\">Logout</Button>\n        </Fragment>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <Button id=\"login\" href=\"/login2\">Login</Button>\n        </Fragment>\n    );\n\n    return(\n\n \n        <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                {isAuthenticated ? authLinks : guestLinks}\n            </Form>\n            </Navbar.Collapse>\n        </Navbar>\n\n    )\n\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n    return {\n        //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n        auth: state.auth\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch: any) => {\n    return{\n        logout: () => dispatch(actionTypes_auth.logout()),\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(NavComponent);"]},"metadata":{},"sourceType":"module"}