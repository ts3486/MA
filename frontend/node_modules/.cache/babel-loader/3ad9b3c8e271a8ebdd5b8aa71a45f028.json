{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\"; // import postsReducer from \"../../store/reducers/postsReducer\";\n\nimport { ProfileWrapper } from \"./ProfileCompoent_style\";\nimport { Avatar, Button } from \"@material-ui/core\";\nexport const ProfileComponent = props => {\n  _s();\n\n  let {\n    username\n  } = useParams();\n  const [userName, setUsername] = useState(username);\n  const [description, setDescription] = useState(\"\");\n  const [modalIsOpen, setModalState] = useState(false);\n  const [modal2IsOpen, setModal2State] = useState(false);\n  const [image, setImage] = useState(null);\n  const [filename, setFilename] = useState(null); //Fetch user profile data\n\n  useEffect(() => {\n    const fetchUserData = () => {\n      axios.get(\"http://localhost:5000/users/profile/\" + username).then(res => {\n        setUsername(res.username);\n        setDescription(res.description);\n        setFilename(res.filename);\n        console.log(userNae, description, filename);\n      });\n    };\n\n    fetchUserData(); //Graduation Function\n\n    if (props.totalLikes >= 2) {\n      setModal2State(true);\n    }\n  }, [props.totalLikes, username]); //Filter Posts\n\n  const userPosts = props.posts.filter(post => post.username === username); //Profile Update\n\n  const profileData = {\n    newUsername: userName,\n    description: description,\n    filename: filename\n  };\n  const imageData = new FormData();\n  imageData.append(\"image\", image);\n\n  const setProfile = () => {\n    //Update User Info\n    axios.post(\"http://localhost:5000/users/profile/update/\" + username, profileData).then(err => console.log(\"profile updated!\")); //Update username of all user posts\n\n    axios.post(\"http://localhost:5000/posts/update/username/\" + username, profileData).then(err => console.log(\"user posts updated!\"));\n    ;\n    axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(res => {\n      console.log(\"profile pic updated!!\");\n    }).catch(error => console.log(error)); //reload with new username;\n    // window.location.replace(\"http://localhost:3000/profile/\" + profileData.newUsername);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [filename ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"http://localhost:5000/posts/images/\" + filename,\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"username\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likes\",\n          children: props.totalLikes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [\" \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"descButton\",\n          variant: \"contained\",\n          color: \"default\",\n          onClick: e => setModalState(true),\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          onRequestClose: () => setModalState(false),\n          ariaHideApp: false,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              id: \"input\",\n              formEncType: \"multipart/form-data\",\n              onChange: e => {\n                setImage(e.target.files[0]);\n                setFilename(e.target.files[0].name);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              id: \"input\",\n              value: userName,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              id: \"input\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"submit\",\n              type: \"button\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: e => {\n                setModalState(false);\n                setProfile();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-container\",\n          children: userPosts.map(post => {\n            var _post$filename, _post$filename2, _post$filename3, _post$filename4;\n\n            let content = null;\n\n            if ((_post$filename = post.filename) === null || _post$filename === void 0 ? void 0 : _post$filename.includes(\"jpg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename2 = post.filename) === null || _post$filename2 === void 0 ? void 0 : _post$filename2.includes(\"jpeg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename3 = post.filename) === null || _post$filename3 === void 0 ? void 0 : _post$filename3.includes(\"png\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename4 = post.filename) === null || _post$filename4 === void 0 ? void 0 : _post$filename4.includes(\"mov\")) {\n              content = /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                controls: true\n              }, post.filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 45\n              }, this);\n            }\n\n            ;\n            return content;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal2IsOpen,\n        onRequestClose: () => setModal2State(false),\n        ariaHideApp: false,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Congratulations!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"You have successfully reached # followers and # likes!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Now is the time to solidify your fanbase in other platforms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileComponent, \"2P+F2/OgfBjjN4JLj80/qsiiNbs=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    user: state.auth.user,\n    totalLikes: state.user.totalLikes\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileComponent); //problem is that the props loaded rn are the entire posts, although i want to filter only the users posts.\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx"],"names":["React","useState","useEffect","Modal","connect","useParams","axios","ProfileWrapper","Avatar","Button","ProfileComponent","props","username","userName","setUsername","description","setDescription","modalIsOpen","setModalState","modal2IsOpen","setModal2State","image","setImage","filename","setFilename","fetchUserData","get","then","res","console","log","userNae","totalLikes","userPosts","posts","filter","post","profileData","newUsername","imageData","FormData","append","setProfile","err","catch","error","e","target","files","name","value","map","content","includes","mapStateToProps","state","user","auth"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Modal from \"react-modal\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\n// import postsReducer from \"../../store/reducers/postsReducer\";\nimport {ProfileWrapper} from \"./ProfileCompoent_style\";\nimport {Avatar, Button} from \"@material-ui/core\";\n\ninterface Props {\n    username?: any;\n    description?: string;\n    posts?: any;\n}\n\n\nexport const ProfileComponent: React.FC<Props> = (props: any) => {\n\n    let {username} = useParams<any>();\n\n    const [userName, setUsername] = useState(username);\n    const [description, setDescription] = useState(\"\");\n    const [modalIsOpen, setModalState] = useState(false);\n    const [modal2IsOpen, setModal2State] = useState(false);\n    const [image, setImage] = useState(null);\n    const [filename, setFilename] = useState(null);\n\n\n\n    //Fetch user profile data\n    useEffect(() => {\n\n        const fetchUserData = () => {\n            axios.get(\"http://localhost:5000/users/profile/\" + username).then((res: any) => {\n                setUsername(res.username);\n                setDescription(res.description);\n                setFilename(res.filename);\n\n                console.log(userNae, description, filename);\n            })\n        };\n\n        fetchUserData();\n\n        //Graduation Function\n        if(props.totalLikes >= 2){\n            setModal2State(true);\n        }\n    }, [props.totalLikes, username])\n\n    //Filter Posts\n    const userPosts = props.posts.filter((post: any) => post.username ===  username)\n\n    //Profile Update\n    const profileData = {\n        newUsername: userName,\n        description: description,\n        filename: filename,\n    }\n\n    const imageData: any = new FormData();\n\n    imageData.append(\"image\", image)\n    \n    const setProfile = () => {\n        //Update User Info\n        axios.post(\"http://localhost:5000/users/profile/update/\" + username, profileData).then((err:any) => (console.log(\"profile updated!\")));\n        //Update username of all user posts\n        axios.post(\"http://localhost:5000/posts/update/username/\" + username, profileData).then((err:any) => (console.log(\"user posts updated!\")));;\n\n        axios.post(\"http://localhost:5000/posts/add/image\", imageData).then(res => {\n            console.log(\"profile pic updated!!\");\n        }).catch( error => console.log(error))\n\n        //reload with new username;\n        // window.location.replace(\"http://localhost:3000/profile/\" + profileData.newUsername);\n    }\n\n   \n\n    return(\n    \n    <ProfileWrapper>\n        <div className=\"container\">\n\n            <div className=\"card\">\n                {filename ?\n                <Avatar src={\"http://localhost:5000/posts/images/\" + filename}>U</Avatar>\n                :\n                <Avatar>U</Avatar>\n                }         \n                <h2 className=\"username\">{userName}</h2>\n                <div className=\"likes\">{props.totalLikes}</div>\n                <div className=\"description\"> {description}</div>\n                <Button className=\"descButton\" variant=\"contained\" color=\"default\" onClick={(e) => setModalState(true)}>Edit Profile</Button>\n                \n\n                {/* Edit Profile Modal */}\n                <Modal　isOpen={modalIsOpen} onRequestClose={() => setModalState(false)} ariaHideApp={false}>\n                    <form className=\"form\">\n                        <label>Profile Image:</label>\n                        <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"input\"\n                        formEncType=\"multipart/form-data\"\n                        onChange={(e: any) => {setImage(e.target.files[0]); setFilename(e.target.files[0].name); }}\n                        required\n                        /><br /><br />\n\n                        <label>Username:</label>\n                            <input\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"input\"\n                            value={userName}\n                            onChange={(e)=> setUsername(e.target.value)}\n                            required\n                            /><br /><br />\n                        \n                        <label>Description:</label>\n                            <input\n                            type=\"text\"\n                            name=\"description\"\n                            id=\"input\"\n                            value={description}\n                            onChange={(e)=> setDescription(e.target.value)}\n                            required\n                            /><br /><br />\n                        \n                        <Button id=\"submit\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => {setModalState(false); setProfile();}}>Submit</Button>    \n                    </form>\n                </Modal>\n\n                <div className=\"posts-container\">\n                    {userPosts.map((post: any) => {\n\n                        let content = null; \n\n                        if (post.filename?.includes(\"jpg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                         else if (post.filename?.includes(\"jpeg\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"png\")){\n                                content = (<img key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"mov\")){\n                                 content = (<video key={post.filename} className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} controls></video>);\n                            };    \n    \n                        return content;       \n                    })}\n                </div>\n            </div>\n\n            <Modal isOpen={modal2IsOpen} onRequestClose={() => setModal2State(false)} ariaHideApp={false}>\n                <h1> Congratulations!!!</h1>\n                <div>You have successfully reached # followers and # likes!!</div>\n                <div>Now is the time to solidify your fanbase in other platforms</div>\n            </Modal>\n        </div>\n    </ProfileWrapper>\n\n    );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n    posts: state.posts.posts,\n    user: state.auth.user,\n    totalLikes: state.user.totalLikes,\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);\n\n//problem is that the props loaded rn are the entire posts, although i want to filter only the users posts."]},"metadata":{},"sourceType":"module"}