{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PostComponent from \"./Components/Posts/PostComponent\"; // import TestComponent from \"./Components/Posts/TestComponent\"\n\nimport FormComponent from \"./Components/FormComponent\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'; //* (asterik) means everything in the file\n\nimport * as actionTypes from \"./store/actions\";\nimport { fetchData } from \"./store/actions\";\nimport './App.css'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  //constuructor is for creating a state at initialization.\n  //   constructor(props: any) {\n  //     super(props);\n  //     // this.onChangeName = this.onChangeName.bind(this);\n  //     // this.onChangeEmail = this.onChange.bind(this);\n  //     // this.onChangePhone = this.onChangePhone.bind(this);\n  //     // this.onSubmit = this.onSubmit.bind(this);\n  // }\n  componentDidMount() {\n    this.props.dispatch(fetchData()); // axios.get(\"http://127.0.0.1:8000/posts/posts/\").then((response) => {\n    //   let posts: string | number = response.data;\n    //   //putting the content in state\n    //   this.setState({posts: posts})\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        id: \"nav\",\n        bg: \"light\",\n        expand: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"React-Bootstrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"basic-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"basic-navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#link\",\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n              title: \"Dropdown\",\n              id: \"basic-nav-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.1\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.2\",\n                children: \"Another action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.3\",\n                children: \"Something\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.4\",\n                children: \"Separated link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            inline: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"text\",\n              placeholder: \"Search\",\n              className: \"mr-sm-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#home\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"header\",\n        children: \"Welcome to Music Accelerator!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The issue: 1. Changing just a part of the state one by one. 2. Post Method. Issue with data format imcompatibility with rest api?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), this.props.posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(PostComponent, {\n          id: post.id,\n          name: post.name,\n          image: post.image,\n          desc: post.desc,\n          likes: post.likes\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(FormComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n} //directs how the state managed by redux will be mapped to state here. Makes data from store available to component\n\n\nconst mapStateToProps = state => {\n  return {\n    text: state.text,\n    posts: state.posts\n  };\n}; //dispatch methods\n// eslint-disable-next-line \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => dispatch({\n      type: actionTypes.INCREMENT,\n      val: 10\n    }),\n    onDecrementCounter: () => dispatch({\n      type: actionTypes.DECREMENT,\n      val: 15\n    }),\n    onMount: () => dispatch(actionTypes.fetchData())\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx"],"names":["React","Component","connect","PostComponent","FormComponent","Navbar","Nav","NavDropdown","Form","FormControl","Button","actionTypes","fetchData","App","componentDidMount","props","dispatch","render","posts","map","post","index","id","name","image","desc","likes","mapStateToProps","state","text","mapDispatchToProps","onIncrementCounter","type","INCREMENT","val","onDecrementCounter","DECREMENT","onMount"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {connect} from \"react-redux\";\nimport PostComponent from \"./Components/Posts/PostComponent\"\n// import TestComponent from \"./Components/Posts/TestComponent\"\nimport FormComponent from \"./Components/FormComponent\"\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\n//* (asterik) means everything in the file\nimport * as actionTypes from \"./store/actions\";\nimport {fetchData} from \"./store/actions\";\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component<any> {\n\n//constuructor is for creating a state at initialization.\n//   constructor(props: any) {\n//     super(props);\n//     // this.onChangeName = this.onChangeName.bind(this);\n//     // this.onChangeEmail = this.onChange.bind(this);\n//     // this.onChangePhone = this.onChangePhone.bind(this);\n//     // this.onSubmit = this.onSubmit.bind(this);\n\n// }\n\n\n\n  componentDidMount(){\n\n    this.props.dispatch(fetchData())\n\n    // axios.get(\"http://127.0.0.1:8000/posts/posts/\").then((response) => {\n    //   let posts: string | number = response.data;\n    //   //putting the content in state\n    //   this.setState({posts: posts})\n    // })\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        {/* navbar block */}\n        <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#link\">Link</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button>\n              <Nav.Link href=\"#home\">Login</Nav.Link>\n            </Form>\n            \n          </Navbar.Collapse>\n        </Navbar>\n        {/* mainpage content */}\n        <h1 id=\"header\">Welcome to Music Accelerator!</h1>\n        <div>The issue: 1. Changing just a part of the state one by one. 2. Post Method. Issue with data format imcompatibility with rest api?</div>\n        {/* posts */}\n        {this.props.posts.map((post: any, index: number)=> {\n\n          return <PostComponent id={post.id} name={post.name} image={post.image} desc={post.desc} likes={post.likes} key={index}/>\n    \n        })}\n\n      <FormComponent/>\n       \n      {/* Redux Testing */}\n      {/* <TestComponent text={this.props.text}/> */}\n\n      {/* end of jsx */}\n      </div> \n    );\n  }\n}\n\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n  return {\n      text: state.text,\n      posts: state.posts\n  };\n};\n\n\n\n//dispatch methods\n// eslint-disable-next-line \nconst mapDispatchToProps = (dispatch: any) => {\n\n    return{\n        onIncrementCounter: () => dispatch({type: actionTypes.INCREMENT, val:10 }),\n        onDecrementCounter: () => dispatch({type: actionTypes.DECREMENT, val: 15}),\n        onMount: () => dispatch(actionTypes.fetchData()),\n    }\n}\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}