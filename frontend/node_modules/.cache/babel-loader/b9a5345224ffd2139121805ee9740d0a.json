{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/SignupComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { TextField, Button, Card } from '@material-ui/core';\nimport { SignupWrapper } from \"./SignupComponent_style\";\n\nconst RegistrationForm = props => {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(); //Submit registration data\n\n  const onSubmit = () => {\n    props.registerUser(username, email, password);\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignupWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topContainer\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"signupContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"username\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"email\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"submit\",\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: onSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"mT0h1yBs26CsWRbfnqs23N/zunA=\");\n\n_c = RegistrationForm;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerUser: (username, email, password) => dispatch(actionTypes_auth.registerUser({\n      username,\n      email,\n      password\n    })) // onAuth: (username: string, email: string, password1: any, password2: any) => dispatch(actionTypes_auth.authSignup(username, email, password1, password2)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/Login/SignupComponent.tsx"],"names":["React","useState","connect","actionTypes_auth","TextField","Button","Card","SignupWrapper","RegistrationForm","props","username","setUsername","email","setEmail","password","setPassword","onSubmit","registerUser","history","push","e","target","value","mapStateToProps","state","loading","auth","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport {TextField, Button, Card} from '@material-ui/core';\nimport {SignupWrapper} from \"./SignupComponent_style\";\n\n\n\n\nconst RegistrationForm = (props: any) => {\n\n\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n\n  //Submit registration data\n  const onSubmit = () => {\n\n    props.registerUser(username, email, password);\n\n    props.history.push(\"/\");\n  };\n\n\n \n  return (\n    <SignupWrapper>\n        <div className=\"topContainer\">\n          <Card className=\"signupContainer\">\n              <h1 className=\"header\">Sign Up</h1>\n              <TextField label=\"username\" variant=\"outlined\" required onChange={(e: any) => setUsername(e.target.value)}/>\n              <TextField label=\"password\" variant=\"outlined\" required onChange={(e: any) => setPassword(e.target.value)}/>\n              <TextField label=\"email\" variant=\"outlined\" required onChange={(e: any) => setEmail(e.target.value)}/>\n          \n              <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={onSubmit}>Login</Button>\n          </Card>\n        </div>\n    </SignupWrapper>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n        loading: state.auth.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n      registerUser: (username:any, email:any, password:any) => dispatch(actionTypes_auth.registerUser({username, email, password}))\n      // onAuth: (username: string, email: string, password1: any, password2: any) => dispatch(actionTypes_auth.authSignup(username, email, password1, password2)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\n"]},"metadata":{},"sourceType":"module"}