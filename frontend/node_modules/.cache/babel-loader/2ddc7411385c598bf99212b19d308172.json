{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\"; // import postsReducer from \"../../store/reducers/postsReducer\";\n\nimport { ProfileWrapper } from \"./ProfileCompoent_style\";\nexport const ProfileComponent = props => {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [modalIsOpen, setModalState] = useState(false);\n  let {\n    username\n  } = useParams();\n  const userPosts = props.posts.filter(post => post.username === username);\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"descButton\",\n          onClick: e => setModalState(true),\n          children: \"Set Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Profile Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: description,\n            onChange: e => {\n              setDescription(e.target.value);\n            },\n            placeholder: \"Write about yourself!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-container\",\n          children: userPosts.map(post => {\n            var _post$filename, _post$filename2, _post$filename3, _post$filename4;\n\n            let content = null;\n\n            if ((_post$filename = post.filename) === null || _post$filename === void 0 ? void 0 : _post$filename.includes(\"jpg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename2 = post.filename) === null || _post$filename2 === void 0 ? void 0 : _post$filename2.includes(\"jpeg\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename3 = post.filename) === null || _post$filename3 === void 0 ? void 0 : _post$filename3.includes(\"png\")) {\n              content = /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                alt: \"is it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 44\n              }, this);\n            } else if ((_post$filename4 = post.filename) === null || _post$filename4 === void 0 ? void 0 : _post$filename4.includes(\"mov\")) {\n              content = /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"image\",\n                src: \"http://localhost:5000/posts/images/\" + post.filename,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this);\n            }\n\n            ;\n            return content;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileComponent, \"P4FRVOUgQgbp/zD7gAZlGrq1K1o=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileComponent;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    auth: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileComponent); //problem is that the props loaded rn are the entire posts, although i want to filter only the users posts.\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/Components/User/ProfileComponent.tsx"],"names":["React","useState","Modal","connect","useParams","ProfileWrapper","ProfileComponent","props","description","setDescription","modalIsOpen","setModalState","username","userPosts","posts","filter","post","e","target","value","map","content","filename","includes","mapStateToProps","state","auth","user"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Modal from \"react-modal\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router\";\n// import postsReducer from \"../../store/reducers/postsReducer\";\nimport {ProfileWrapper} from \"./ProfileCompoent_style\";\n\ninterface Props {\n    username?: any;\n    description?: string;\n    posts?: any;\n}\n\n\nexport const ProfileComponent: React.FC<Props> = (props: any) => {\n\n    const [description, setDescription] = useState(\"\");\n    const [modalIsOpen, setModalState] = useState(false);\n\n\n    let {username} = useParams<any>();\n\n    const userPosts = props.posts.filter((post: any) => post.username ===  username)\n\n   \n\n    return(\n    \n    <ProfileWrapper>\n        <div className=\"container\">\n            <div className=\"card\">\n                <h2 className=\"username\">{username}</h2>\n                <button className=\"descButton\" onClick={(e) => setModalState(true)}>Set Description</button>\n                <Modal　isOpen={modalIsOpen}>\n                    <label>Profile Description: </label>\n                    <input type=\"text\" name=\"description\" value={description} onChange={(e)=>{setDescription(e.target.value)}} placeholder=\"Write about yourself!\"/>\n                    <button>Change</button>\n                </Modal>\n\n                <div className=\"description\">\n                   {description}\n                </div>\n\n                <div className=\"posts-container\">\n                    {userPosts.map((post: any) => {\n\n                        let content = null; \n\n                        if (post.filename?.includes(\"jpg\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                         else if (post.filename?.includes(\"jpeg\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"png\")){\n                                content = (<img className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} alt=\"is it here\"></img>);\n                            }\n                        else if (post.filename?.includes(\"mov\")){\n                                 content = (<video className=\"image\" src={\"http://localhost:5000/posts/images/\" + post.filename} controls></video>);\n                            };    \n    \n                        return content;       \n                    })}\n                </div>\n            </div>\n        </div>\n    </ProfileWrapper>\n\n    );\n};\n\nconst mapStateToProps = (state: any) => {\n    return{\n    posts: state.posts.posts,\n    auth: state.auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileComponent);\n\n//problem is that the props loaded rn are the entire posts, although i want to filter only the users posts."]},"metadata":{},"sourceType":"module"}