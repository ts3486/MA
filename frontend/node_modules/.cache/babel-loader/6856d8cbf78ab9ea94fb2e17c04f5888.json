{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actionTypes_home from \"./store/actions/home_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport PostComponent from \"./Components/Posts/PostComponent\";\nimport FormComponent2 from \"./Components/Forms/FormComponent\"; // import LoginComponent from \"./Components/Login/LoginComponent_test\";\n\nimport LoginComponent from \"./Components/Login/LoginComponent\";\nimport SignupComponent from \"./Components/Login/SignupComponent\";\nimport navComponent from \"./Components/Navbar/navComponent\";\n\nclass App extends Component {\n  //constuructor is for creating a state at initialization.\n  //   constructor(props: any) {\n  //     super(props);\n  // }\n  //use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount() {\n    // await this.props.onTryAutoSignup();\n    await this.props.loadUser();\n    await this.props.fetchPosts();\n    await this.props.awaitData();\n  }\n\n  render() {\n    const posts = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: this.props.posts.map((post, key) => {\n          return /*#__PURE__*/_jsxDEV(PostComponent, {\n            id: post._id,\n            username: post.username,\n            filename: post.filename,\n            description: post.description,\n            likes: post.likes\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          component: navComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"header\",\n          children: \"Welcome to Music Accelerator!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: posts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            component: SignupComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this); //}  \n  }\n\n} //directs how the state managed by redux will be mapped to state here. Makes data from store available to component\n\n\nconst mapStateToProps = state => {\n  return {\n    text: state.home.text,\n    posts: state.home.posts,\n    data: state.home.data,\n    image: state.home.images,\n    //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPosts: () => dispatch(actionTypes_home.fetchPosts()),\n    awaitData: () => dispatch(actionTypes_home.awaitData()),\n    loadUser: () => dispatch(actionTypes_auth.loadUser()) // onTryAutoSignup: () => dispatch(actionTypes_auth.authCheckState()),\n    // logout: () => dispatch(actionTypes_auth.authLogout()),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //Goal: Make the object id of post and upload.file same.","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/App.tsx"],"names":["React","Component","BrowserRouter","Switch","Route","connect","actionTypes_home","actionTypes_auth","PostComponent","FormComponent2","LoginComponent","SignupComponent","navComponent","App","componentDidMount","props","loadUser","fetchPosts","awaitData","render","posts","map","post","key","_id","username","filename","description","likes","mapStateToProps","state","text","home","data","image","images","isAuthenticated","auth","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport * as actionTypes_home from \"./store/actions/home_actions\";\nimport * as actionTypes_auth from \"./store/actions/auth_actions\";\nimport PostComponent from \"./Components/Posts/PostComponent\";\nimport FormComponent2 from \"./Components/Forms/FormComponent\";\n// import LoginComponent from \"./Components/Login/LoginComponent_test\";\nimport LoginComponent from \"./Components/Login/LoginComponent\";\nimport SignupComponent from \"./Components/Login/SignupComponent\";\nimport navComponent from \"./Components/Navbar/navComponent\";\n\nclass App extends Component<any> {\n\n//constuructor is for creating a state at initialization.\n//   constructor(props: any) {\n//     super(props);\n// }\n\n\n//use \"async\" so that componentDidMount() is ran first. Async functions allow promise based processing (functions perfomed in order and after each task is done)          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  async componentDidMount(){\n    // await this.props.onTryAutoSignup();\n\n    await this.props.loadUser();\n    await this.props.fetchPosts();\n    await this.props.awaitData();\n  };\n  \n\n  render(){\n\n    const posts = (\n \n      <div>\n          <div className=\"container\">\n          {this.props.posts.map((post: any, key: any) => {\n            return <PostComponent id= {post._id} username={post.username} filename={post.filename} description={post.description} likes={post.likes} key={post._id}/>   \n          })}      \n          </div>\n\n        {/* {this.props.isAuthenticated ?\n        <FormComponent/> : null } */}\n\n        <FormComponent2/>\n  \n        {/* end of jsx */}\n      </div>\n    );\n\n\n      return (\n\n        <div className=\"App\">\n          <BrowserRouter>\n              <Route component={navComponent}/>\n          {/* Pages */}\n            <h1 id=\"header\">Welcome to Music Accelerator!</h1>\n            <Switch>\n              <Route exact={true} path=\"/\" render={()=> <div>{posts}</div>}/>         \n              <Route exact={true} path=\"/login\" component={LoginComponent}/>\n              <Route exact={true} path=\"/signup\" component={SignupComponent}/>\n            </Switch>\n          </BrowserRouter>\n        </div> \n      );\n    //}  \n  }\n}\n\n//directs how the state managed by redux will be mapped to state here. Makes data from store available to component\nconst mapStateToProps = (state: any) => {\n  return {\n      text: state.home.text,\n      posts: state.home.posts,\n      data: state.home.data,\n      image: state.home.images,\n      //checks if user token is null (looged in or not)   if state.auth.token is other than null, it returns true\n      isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return{\n      fetchPosts: () => dispatch(actionTypes_home.fetchPosts()),\n      awaitData: () => dispatch(actionTypes_home.awaitData()),\n      loadUser: () => dispatch(actionTypes_auth.loadUser())\n      // onTryAutoSignup: () => dispatch(actionTypes_auth.authCheckState()),\n      // logout: () => dispatch(actionTypes_auth.authLogout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n//Goal: Make the object id of post and upload.file same. "]},"metadata":{},"sourceType":"module"}