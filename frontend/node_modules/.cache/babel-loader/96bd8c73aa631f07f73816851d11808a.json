{"ast":null,"code":"import * as actionTypes from \"../actions/auth_actions\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case actionTypes.USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case actionTypes.LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state,\n        //return token and user data\n        ...action.payload,\n        error: action.error,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case actionTypes.REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state,\n        //sending the entire payload (includes token and user)\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case actionTypes.AUTH_ERROR:\n    case actionTypes.LOGIN_FAIL:\n    case actionTypes.LOGOUT_SUCCESS:\n    case actionTypes.REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/reducers/auth_reducer.tsx"],"names":["actionTypes","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","authReducer","state","action","type","USER_LOADING","USER_LOADED","payload","LOGIN_SUCCESS","setItem","error","REGISTER_SUCCESS","AUTH_ERROR","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_FAIL","removeItem"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAGR,YAAd,EAA4BS,MAA5B,KAA4C;AAG5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAW,CAACY,YAAjB;AACI,aAAM,EACJ,GAAGH,KADC;AAEJH,QAAAA,SAAS,EAAE;AAFP,OAAN;;AAKJ,SAAKN,WAAW,CAACa,WAAjB;AACI,aAAM,EACJ,GAAGJ,KADC;AAEJJ,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,SAAS,EAAE,KAHP;AAIJC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAJT,OAAN;;AAOJ,SAAKd,WAAW,CAACe,aAAjB;AACIZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACI,OAAP,CAAeZ,KAA7C;AACA,aAAM,EACJ,GAAGO,KADC;AAEJ;AACA,WAAGC,MAAM,CAACI,OAHN;AAIJG,QAAAA,KAAK,EAAEP,MAAM,CAACO,KAJV;AAKJZ,QAAAA,eAAe,EAAE,IALb;AAMJC,QAAAA,SAAS,EAAE;AANP,OAAN;;AASJ,SAAKN,WAAW,CAACkB,gBAAjB;AACIf,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACI,OAAP,CAAeZ,KAA7C;AACA,aAAM,EACJ,GAAGO,KADC;AAEJ;AACA,WAAGC,MAAM,CAACI,OAHN;AAIJT,QAAAA,eAAe,EAAE,IAJb;AAKJC,QAAAA,SAAS,EAAE;AALP,OAAN;;AAQJ,SAAKN,WAAW,CAACmB,UAAjB;AACA,SAAKnB,WAAW,CAACoB,UAAjB;AACA,SAAKpB,WAAW,CAACqB,cAAjB;AACA,SAAKrB,WAAW,CAACsB,aAAjB;AACMnB,MAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACA,aAAM,EACJ,GAAGd,KADC;AAEJP,QAAAA,KAAK,EAAE,IAFH;AAGJK,QAAAA,IAAI,EAAE,IAHF;AAIJF,QAAAA,eAAe,EAAE,KAJb;AAKJC,QAAAA,SAAS,EAAE;AALP,OAAN;;AAOA;AACE,aAAOG,KAAP;AAjDZ;AAmDH,CAtDD;;AAyDA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"../actions/auth_actions\"\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nconst authReducer = (state: any = initialState, action: any) => {\n\n\n    switch(action.type){\n        case actionTypes.USER_LOADING:\n            return{\n              ...state,\n              isLoading: true,\n            };\n\n        case actionTypes.USER_LOADED:\n            return{\n              ...state,\n              isAuthenticated: true,\n              isLoading: false,\n              user: action.payload,\n            };\n\n        case actionTypes.LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return{\n              ...state,\n              //return token and user data\n              ...action.payload,\n              error: action.error,\n              isAuthenticated: true,\n              isLoading: false,\n            };\n\n        case actionTypes.REGISTER_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return{\n              ...state,\n              //sending the entire payload (includes token and user)\n              ...action.payload,\n              isAuthenticated: true,\n              isLoading: false,\n            };\n        \n        case actionTypes.AUTH_ERROR:\n        case actionTypes.LOGIN_FAIL:\n        case actionTypes.LOGOUT_SUCCESS:\n        case actionTypes.REGISTER_FAIL:\n              localStorage.removeItem(\"token\");\n              return{\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n              };\n              default:\n                return state;\n    } \n}\n\n\nexport default authReducer\n"]},"metadata":{},"sourceType":"module"}