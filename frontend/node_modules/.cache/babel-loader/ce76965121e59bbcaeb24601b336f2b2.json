{"ast":null,"code":"import axios from \"axios\";\nexport const AWAIT_DATA = \"AWAIT_DATA\";\nexport const DECREMENT = \"DECREMENT\";\nexport const ON_MOUNT = \"ON_MOUNT\";\nexport const TOTAL_LIKES = \"TOTAL_LIKES\";\nexport const onMount = posts => {\n  return {\n    type: ON_MOUNT,\n    posts: posts\n  };\n};\nexport const fetchPosts = () => {\n  return dispatch => {\n    axios.get(\"http://localhost:5000/posts\").then(response => {\n      let posts = response.data;\n      return posts;\n    }).then(posts => dispatch(onMount(posts)));\n  };\n};\nexport const countTotalLikes = username => {\n  return dispatch => {\n    axios.get(\"http://localhost:5000/posts\").then(response => {\n      let posts = response.data;\n      let userPosts = posts.filter(post => {\n        return post.username = username;\n      });\n      let totalLikes = 0;\n      userPosts.forEach(post => {\n        totalLikes += post.likes;\n        return totalLikes;\n      });\n    }).then(totalLikes => {\n      dispatch({\n        type: TOTAL_LIKES,\n        totalLikes: totalLikes\n      });\n    });\n  };\n}; // export const fetchImages = () => {\n//     return (dispatch: any) => {\n//         axios.get(\"http://localhost:5000/posts\").then((response) => {\n//         let posts: string | number = response.data;\n//         return posts;\n//         }).then((posts)=> dispatch(onMount(posts)));\n//     };\n// };\n\nexport const awaitData = () => {\n  return {\n    type: AWAIT_DATA\n  };\n};","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/Front-end/src/store/actions/post_actions.tsx"],"names":["axios","AWAIT_DATA","DECREMENT","ON_MOUNT","TOTAL_LIKES","onMount","posts","type","fetchPosts","dispatch","get","then","response","data","countTotalLikes","username","userPosts","filter","post","totalLikes","forEach","likes","awaitData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA0B;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,QADH;AAEHG,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAmB;AACtBT,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC5D,UAAIN,KAAU,GAAGM,QAAQ,CAACC,IAA1B;AACA,aAAOP,KAAP;AACC,KAHD,EAGGK,IAHH,CAGSL,KAAD,IAAUG,QAAQ,CAACJ,OAAO,CAACC,KAAD,CAAR,CAH1B;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMQ,eAAe,GAAIC,QAAD,IAAsB;AACjD,SAAQN,QAAD,IAAmB;AACtBT,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC5D,UAAIN,KAAU,GAAGM,QAAQ,CAACC,IAA1B;AAEA,UAAIG,SAAS,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAe;AACxC,eAAOA,IAAI,CAACH,QAAL,GAAgBA,QAAvB;AACH,OAFe,CAAhB;AAIA,UAAII,UAAU,GAAG,CAAjB;AAEAH,MAAAA,SAAS,CAACI,OAAV,CAAmBF,IAAD,IAAe;AAC7BC,QAAAA,UAAU,IAAID,IAAI,CAACG,KAAnB;AAEA,eAAOF,UAAP;AACH,OAJD;AAMC,KAfD,EAeGR,IAfH,CAeSQ,UAAD,IAAe;AACnBV,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAEH,WADD;AAELe,QAAAA,UAAU,EAAEA;AAFP,OAAD,CAAR;AAGG,KAnBP;AAoBH,GArBD;AAsBH,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHf,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const AWAIT_DATA = \"AWAIT_DATA\";\nexport const DECREMENT = \"DECREMENT\";\nexport const ON_MOUNT = \"ON_MOUNT\";\nexport const TOTAL_LIKES = \"TOTAL_LIKES\";\n\n\nexport const onMount = (posts: string|number) => {\n    return {\n        type: ON_MOUNT,\n        posts: posts,\n    }\n}\n\nexport const fetchPosts = () => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        let posts: any = response.data;\n        return posts;\n        }).then((posts)=> dispatch(onMount(posts)));\n    };\n};\n\nexport const countTotalLikes = (username: string) => {\n    return (dispatch: any) => {\n        axios.get(\"http://localhost:5000/posts\").then((response) => {\n        let posts: any = response.data;\n     \n        let userPosts = posts.filter((post: any) => {\n            return post.username = username;\n        });\n\n        let totalLikes = 0; \n\n        userPosts.forEach((post: any) => {\n            totalLikes += post.likes;\n\n            return totalLikes\n        })\n\n        }).then((totalLikes)=> {\n            dispatch({\n                type: TOTAL_LIKES,\n                totalLikes: totalLikes,\n            })});\n    };\n}\n\n// export const fetchImages = () => {\n//     return (dispatch: any) => {\n//         axios.get(\"http://localhost:5000/posts\").then((response) => {\n//         let posts: string | number = response.data;\n//         return posts;\n//         }).then((posts)=> dispatch(onMount(posts)));\n//     };\n// };\n \nexport const awaitData = () => {\n    return {\n        type: AWAIT_DATA,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}