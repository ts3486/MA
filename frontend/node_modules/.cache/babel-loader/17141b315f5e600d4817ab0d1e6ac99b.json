{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Tao.S/Desktop/WebDev/MA/frontend/src/Components/Login/LoginComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { TextField, Button, Card } from '@material-ui/core';\nimport { LoginWrapper } from \"./LoginComponent_style\";\n\nconst NormalLoginForm = props => {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(); //Trigger authentication process with form data\n\n  const onSubmit = () => {\n    props.login(email, password);\n    props.history.push(\"/\");\n  }; //Error message \n\n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.auth.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoginWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topContainer\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"loginContainer\",\n        children: [errorMessage, /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"email\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"submit\",\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: onSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NormalLoginForm, \"H4JEG1vuYHSLyhAaPi5fwUA6IIE=\");\n\n_c = NormalLoginForm;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.auth.isLoading,\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(actionTypes_auth.login({\n      email,\n      password\n    }))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLoginForm\");","map":{"version":3,"sources":["/Users/Tao.S/Desktop/WebDev/MA/frontend/src/Components/Login/LoginComponent.tsx"],"names":["React","useState","connect","actionTypes_auth","TextField","Button","Card","LoginWrapper","NormalLoginForm","props","email","setEmail","password","setPassword","onSubmit","login","history","push","errorMessage","error","auth","message","e","target","value","mapStateToProps","state","isLoading","isAuthenticated","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,kCAAlC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAuC,mBAAvC;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AAAA;;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC,CAHwC,CAMxC;;AACA,QAAMa,QAAQ,GAAG,MAAM;AACnBL,IAAAA,KAAK,CAACM,KAAN,CAAYL,KAAZ,EAAmBE,QAAnB;AAEAH,IAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,GAJH,CAPwC,CAaxC;;;AACE,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAIT,KAAK,CAACU,KAAV,EAAgB;AACZD,IAAAA,YAAY,gBACR;AAAA,gBAAIT,KAAK,CAACW,IAAN,CAAWD,KAAX,CAAiBE;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAEH,sBACM,QAAC,YAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,mBACKH,YADL,eAKI;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAyB,UAAA,OAAO,EAAC,UAAjC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,QAAQ,EAAGI,CAAD,IAAYX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnF;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,OAAO,EAAC,UAApC;AAA+C,UAAA,QAAQ,MAAvD;AAAwD,UAAA,QAAQ,EAAGF,CAAD,IAAYT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAPJ,eASI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,QAAX;AAAoB,UAAA,IAAI,EAAC,QAAzB;AAAkC,UAAA,OAAO,EAAC,WAA1C;AAAsD,UAAA,OAAO,EAAEV,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADN;AAkBD,CAvCD;;GAAMN,e;;KAAAA,e;;AA2CN,MAAMiB,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAM;AACFC,IAAAA,SAAS,EAAED,KAAK,CAACN,IAAN,CAAWO,SADpB;AAEFC,IAAAA,eAAe,EAAEF,KAAK,CAACN,IAAN,CAAWQ,eAF1B;AAGFT,IAAAA,KAAK,EAAEO,KAAK,CAACN,IAAN,CAAWD;AAHhB,GAAN;AAKH,CAND;;AAQA,MAAMU,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAM;AACFf,IAAAA,KAAK,EAAE,CAACL,KAAD,EAAgBE,QAAhB,KAAqCkB,QAAQ,CAAC3B,gBAAgB,CAACY,KAAjB,CAAuB;AAACL,MAAAA,KAAD;AAAQE,MAAAA;AAAR,KAAvB,CAAD;AADlD,GAAN;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrB,eAA7C,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actionTypes_auth from \"../../store/actions/auth_actions\";\nimport { TextField, Button, Card} from '@material-ui/core';\nimport {LoginWrapper} from \"./LoginComponent_style\";\n\n\n\n\nconst NormalLoginForm = (props: any) => {\n\nconst [email, setEmail] = useState();\nconst [password, setPassword] = useState();\n\n\n//Trigger authentication process with form data\nconst onSubmit = () => {\n    props.login(email, password);\n\n    props.history.push(\"/\");\n  };\n\n//Error message \n  let errorMessage = null;\n  if (props.error){\n      errorMessage = (\n          <p>{props.auth.error.message}</p>\n      )\n    }\n\n  return (\n        <LoginWrapper>\n            <div className=\"topContainer\">\n                <Card className=\"loginContainer\">\n                    {errorMessage}\n                    {/* {\n                    props.isLoading ?  */}\n\n                    <h1 className=\"header\">Login</h1>\n                    <TextField label=\"email\" variant=\"outlined\" required onChange={(e: any) => setEmail(e.target.value)}/>\n                    <TextField label=\"password\" variant=\"outlined\" required onChange={(e: any) => setPassword(e.target.value)}/>\n                \n                    <Button id=\"submit\" type=\"submit\" variant=\"contained\" onClick={onSubmit}>Login</Button>\n                    {/* } */}\n                </Card>   \n            </div>\n        </LoginWrapper>\n  );\n};\n\n\n\nconst mapStateToProps = (state: any) => {\n    return{\n        isLoading: state.auth.isLoading,\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.auth.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return{\n        login: (email: string, password: string) => dispatch(actionTypes_auth.login({email, password}))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}